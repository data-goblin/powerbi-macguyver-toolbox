{
  "name": "SemanticModel",
  "compatibilityLevel": 1601,
  "model": {
    "culture": "en-US",
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "discourageImplicitMeasures": true,
    "sourceQueryCulture": "en-US",
    "tables": [
      {
        "name": "Table",
        "isHidden": true,
        "lineageTag": "74c7dcbc-f534-4da1-9c59-174298c17e81",
        "columns": [
          {
            "name": "Dimension",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Dimension",
            "displayFolder": "Columns",
            "lineageTag": "b6428db5-956a-46cf-8e0d-f78eb01375b5",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "name": "SubDimension",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "SubDimension",
            "displayFolder": "Columns",
            "lineageTag": "5e30f180-4ec3-494a-b8ad-8c11697dd2f6",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "name": "Month",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Month",
            "formatString": "Long Date",
            "displayFolder": "Columns",
            "lineageTag": "90826514-1f5c-4f5a-97ec-cb24d73861b0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ]
          },
          {
            "name": "Year",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Year",
            "formatString": "0",
            "displayFolder": "Columns",
            "lineageTag": "375a89cb-dd50-4436-8b44-7f963752da6a",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "name": "Quantitative",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Quantitative",
            "formatString": "0",
            "displayFolder": "Columns",
            "lineageTag": "6707e5e6-d461-4e15-88ef-6d8c60a6e2a5",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "name": "Boolean Dimension",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Boolean Dimension",
            "displayFolder": "Columns",
            "lineageTag": "2ffa966d-3a78-44d3-9521-f4ea6d5686da",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Table",
            "mode": "import",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Dimensions = ",
                "        #table(",
                "            {\"Dimension\", \"SubDimension\"}, ",
                "                {   ",
                "                    {\"Elves\", \"Fighter\"}, ",
                "                    {\"Elves\", \"Rogue\"}, ",
                "                    {\"Elves\", \"Sorcerer\"}, ",
                "                    {\"Goblins\", \"Fighter\"}, ",
                "                    {\"Goblins\", \"Rogue\"}, ",
                "                    {\"Goblins\", \"Sorcerer\"}, ",
                "                    {\"Orcs\", \"Fighter\"}, ",
                "                    {\"Orcs\", \"Rogue\"}, ",
                "                    {\"Orcs\", \"Sorcerer\"}",
                "                }",
                "        ),",
                "",
                "    // All dates in last 2 years YTD",
                "    #\"CY\" = Date.Year(DateTime.FixedLocalNow()),",
                "    #\"PY\" = Date.Year(DateTime.FixedLocalNow()) - 1,",
                "",
                "    DateList2022 = ",
                "        List.Dates(",
                "            #date(#\"PY\", 1, 1), ",
                "            Duration.Days(#date(#\"PY\", 12, 31) - #date(#\"PY\", 1, 1)) + 1, ",
                "            #duration(1, 0, 0, 0)",
                "        ),",
                "",
                "    DateList2023 = ",
                "        List.Dates(",
                "            #date(#\"CY\", 1, 1), ",
                "            Duration.Days(#date(#\"CY\", 8, 31) - #date(#\"CY\", 1, 1)) + 1, ",
                "            #duration(1, 0, 0, 0)",
                "        ),",
                "    ",
                "    CombinedDates = ",
                "        DateList2022 & DateList2023,",
                "    ",
                "    DateTable = ",
                "        Table.FromList(",
                "            CombinedDates,",
                "            Splitter.SplitByNothing(),",
                "            null,",
                "            null,",
                "            ExtraValues.Error",
                "        ),",
                "",
                "    // Cross join dates and dimensions to create base table",
                "    JoinFunction = (DateValue) => Table.AddColumn(Dimensions, \"Month\", each DateValue),",
                "",
                "    CrossJoin = ",
                "        Table.TransformRows(DateTable, (row) => JoinFunction(row[Column1])),",
                "    ",
                "    MergedTable = ",
                "        Table.FromList(",
                "            CrossJoin, ",
                "            Splitter.SplitByNothing(), ",
                "            null, ",
                "            null, ",
                "            ExtraValues.Error",
                "        ),",
                "    ",
                "    FinalTableBase = ",
                "        Table.ExpandTableColumn(",
                "            MergedTable, ",
                "            \"Column1\", ",
                "            {\"Dimension\", \"SubDimension\", \"Month\"}",
                "        ),",
                "",
                "    WithValues = ",
                "        Table.AddColumn(",
                "            FinalTableBase, ",
                "            \"Quantitative\", ",
                "            each ",
                "                let ",
                "                    YearValue = Date.Year([Month]),",
                "                    RandomValue = Number.RoundDown(20 + Number.RandomBetween(-25, 25)),",
                "                    BaseValue = 0 + RandomValue",
                "                in",
                "                    if YearValue = #\"PY\" then",
                "                        BaseValue",
                "                    else if YearValue = #\"CY\" and [Dimension] <> \"Goblins\" then",
                "                        BaseValue * 0.82",
                "                    else if YearValue = #\"CY\" and [Dimension] = \"Goblins\" then",
                "                        BaseValue * 1.07",
                "                    else 0",
                "        ),",
                "",
                "    #\"Changed Type\" = ",
                "        Table.TransformColumnTypes(",
                "            WithValues,",
                "            {",
                "                {\"Quantitative\", Int64.Type},",
                "                {\"Month\", type date},",
                "                {\"SubDimension\", type text},",
                "                {\"Dimension\", type text}",
                "            }",
                "        ),",
                "",
                "    #\"Inserted Year\" = ",
                "        Table.AddColumn(",
                "            #\"Changed Type\", ",
                "            \"Year\", ",
                "            each Date.Year([Month]), ",
                "            Int64.Type",
                "        ),",
                "",
                "    #\"Goblins/Others\" = ",
                "        Table.AddColumn(",
                "            #\"Inserted Year\",",
                "            \"Boolean Dimension\",",
                "            each",
                "                if [#\"Dimension\"] = \"Goblins\" then \"Approved\"",
                "                else \"Unapproved\",",
                "            type text",
                "        )",
                "in",
                "    #\"Goblins/Others\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ]
      },
      {
        "name": "2. Report-Specific Objects",
        "isHidden": true,
        "lineageTag": "bc077534-c5b0-40dd-9fb4-4bad6abc2bd2",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]",
            "formatString": "0",
            "lineageTag": "05cd4f72-d741-444a-8849-796154a583d9",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "2. Report-Specific Objects",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "{ 1 }"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Transparent",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "\"#00000000\""
            ],
            "isHidden": true,
            "displayFolder": "Control Colours",
            "lineageTag": "7af08448-2e99-4e55-a505-8e431865c8dd"
          },
          {
            "name": "Sum (2022; Inverse)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "-[Sum (PY)]"
            ],
            "formatString": "#,##0; #,##0; #,##0",
            "isHidden": true,
            "displayFolder": "Dynamic Format Strings",
            "lineageTag": "2ad4db16-6991-4157-8219-d80f6deb39ed",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isCustom\":true}"
              }
            ]
          },
          {
            "name": "Year Colour",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "IF(",
              "    SELECTEDVALUE( 'Table'[Year] ) = 2022,",
              "    \"#ece6da\",",
              "    \"#737068\"",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Control Colours",
            "lineageTag": "7a633807-acfb-4667-bf5f-0f51cfe82c98",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Count (Format String)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "[Count]"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Format Strings",
            "lineageTag": "a823e998-d1ef-493c-a9a7-8e843dc61fc9",
            "formatStringDefinition": {
              "expression": [
                "VAR _Count = [Count]",
                "VAR _Symbol =",
                "    SWITCH(",
                "        TRUE( ),",
                "        _Count > 0, UNICHAR( 10008 ),",
                "        _Count = 0, UNICHAR( 10004 ),",
                "        BLANK( )",
                "    )",
                "RETURN",
                "    \"#,##0 \" & _Symbol"
              ]
            },
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Waffle Subtitle",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Result = [Sum (% of PY YTD)]",
              "RETURN",
              "    \"Progress: \"",
              "        & FORMAT( _Result, \"#,##0%\" )"
            ],
            "isHidden": true,
            "displayFolder": "Waffle Chart (DAX Unicode)",
            "lineageTag": "fb2bb51a-f88a-49e0-b70d-2c8f9bfe8a11"
          },
          {
            "name": "Dynamic Title (Color Indicator)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Result = [Sum (% of PY YTD)]",
              "VAR _Actuals = [Sum (CY YTD)]",
              "VAR _Color =",
              "    IF(",
              "        _Result < 1,",
              "        UNICHAR( 128308 ),",
              "        UNICHAR( 129482 )",
              "    )",
              "RETURN",
              "    _Color & \" Actuals:\"",
              "        & FORMAT( _Actuals, \" #,##0\" )"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "65c9248a-39c8-491d-87ce-125866b90de7"
          },
          {
            "name": "Rating Subtitle",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Rating = [Sum (% of PY YTD)] * 5",
              "RETURN",
              "    \"Rating: \" & FORMAT( _Rating, \"#,##0\" )"
            ],
            "isHidden": true,
            "displayFolder": "Rating (DAX Unicode)",
            "lineageTag": "22a84017-ed7c-4e73-a82b-0982319caeab"
          },
          {
            "name": "Waffle",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "-- Init",
              "VAR _Actuals = [Sum (CY YTD)]",
              "VAR _Target = [Sum (PY)]",
              "VAR _Perc =",
              "    MIN( 1, DIVIDE( _Actuals, _Target ) )",
              "VAR _TotalCells = 100",
              "VAR _RowLength = 10",
              "VAR _TotalRows =",
              "    CEILING(",
              "        DIVIDE( _TotalCells, _RowLength ),",
              "        1",
              "    )",
              "VAR _FilledCount =",
              "    ROUND( _Perc * _TotalCells, 0 )",
              "",
              "-- Unicode characters",
              "VAR _Filled = UNICHAR( 9632 ) & \" \" -- ■",
              "VAR _Empty = UNICHAR( 9633 ) & \" \"  -- □",
              "-- Figure out the waffle Height x Width etc.",
              "VAR _FullFilledLines =",
              "    INT( _FilledCount / _RowLength )",
              "VAR _FilledPartial =",
              "    MOD( _FilledCount, _RowLength )",
              "VAR _EmptyPartial =",
              "    _RowLength - _FilledPartial",
              "VAR _FullEmptyLines =",
              "    _TotalRows - _FullFilledLines",
              "        - IF( _FilledPartial > 0, 1, 0 )",
              "",
              "-- Result",
              "VAR _Waffle =",
              "    REPT(",
              "        REPT( _Empty, _RowLength )",
              "            & UNICHAR( 10 ),",
              "        _FullEmptyLines",
              "    )",
              "        & IF(",
              "            _FilledPartial > 0,",
              "            REPT( _Filled, _FilledPartial )",
              "                & REPT( _Empty, _EmptyPartial )",
              "                & UNICHAR( 10 ),",
              "            \"\"",
              "        )",
              "        & REPT(",
              "            REPT( _Filled, _RowLength )",
              "                & UNICHAR( 10 ),",
              "            _FullFilledLines",
              "        )",
              "RETURN",
              "    _Waffle"
            ],
            "isHidden": true,
            "displayFolder": "Waffle Chart (DAX Unicode)",
            "lineageTag": "2ccd2bf1-9988-423e-abd0-12ccb403f7ae"
          },
          {
            "name": "Rating",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "-- Init",
              "VAR _Actuals = [Sum (CY YTD)]",
              "VAR _Target = [Sum (PY YTD)]",
              "VAR _Perc =",
              "    MIN( 1, DIVIDE( _Actuals, _Target ) )",
              "VAR _MaxStars = 5",
              "VAR _FilledStarsCount =",
              "    INT( _Perc * _MaxStars )",
              "VAR _EmptyStarsCount =",
              "    _MaxStars - _FilledStarsCount",
              "",
              "",
              "-- Unicode characters",
              "VAR _FilledStar = UNICHAR( 9733 )         -- ★",
              "VAR _EmptyStar = UNICHAR( 9734 )          -- ☆",
              "-- Result",
              "VAR _StarRating =",
              "    REPT( _FilledStar, _FilledStarsCount )",
              "        & REPT( _EmptyStar, _EmptyStarsCount )",
              "RETURN",
              "    _StarRating & UNICHAR( 10 )"
            ],
            "isHidden": true,
            "displayFolder": "Rating (DAX Unicode)",
            "lineageTag": "860209d7-5ea2-4a48-9ea1-2f9e7df39fce"
          },
          {
            "name": "Dynamic Subtitle (Context)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Perc = [Sum (Δ% PY YTD)]",
              "VAR _Color =",
              "    \"   ( \"",
              "        & IF(",
              "            _Perc < 1,",
              "            UNICHAR( 9660 ),",
              "            UNICHAR( 9650 )",
              "        )",
              "VAR _Target = [Sum (PY YTD)]",
              "RETURN",
              "    \"1 Year Prior: \"",
              "        & FORMAT( _Target, \"#,##0\" )",
              "        & _Color",
              "        & FORMAT(",
              "            _Perc,",
              "            \" #,##0.0%; #,##0.0%; #,##0%\"",
              "        )",
              "        & \" )\""
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "faf3bed7-a8d6-42b2-b0e4-edc35cd41bed",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "% Claims Approved",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _ApprovedClaims =",
              "    CALCULATE(",
              "        [Sum],",
              "        'Table'[Boolean Dimension] = \"Approved\"",
              "    )",
              "VAR _Perc = DIVIDE( _ApprovedClaims, [Sum] )",
              "RETURN",
              "    FORMAT( _Perc, \"#,##0%\" )"
            ],
            "isHidden": true,
            "displayFolder": "KPI Doughnut",
            "lineageTag": "e8761060-f832-42a7-8816-f806e256b7bd"
          },
          {
            "name": "# Claims Approved",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _ApprovedClaims =",
              "    CALCULATE(",
              "        [Sum],",
              "        'Table'[Boolean Dimension] = \"Approved\"",
              "    )",
              "RETURN",
              "    FORMAT( _ApprovedClaims, \"#,##0,.0K\" )"
            ],
            "isHidden": true,
            "displayFolder": "KPI Bar",
            "lineageTag": "1778fef3-fdfe-49f2-806a-74e0ca8b7fc8"
          },
          {
            "name": "KPI Bullet Subtitle",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Increase = UNICHAR( 8599 )",
              "VAR _Decrease = UNICHAR( 8600 )",
              "VAR _Delta = [Sum (Δ PY YTD)]",
              "VAR _Arrow =",
              "    IF( _Delta > 0, _Increase, _Decrease )",
              "VAR _Result =",
              "    _Arrow & \" \"",
              "        & FORMAT( [Sum (Δ% PY YTD)], \"#,##0%\" )",
              "        & \" vs. LY\"",
              "RETURN",
              "    _Result"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "01eae849-d1a7-49ec-9afd-af6363015ed4",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "KPI Bullet Title",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Goblins =",
              "    CALCULATE(",
              "        [Sum],",
              "        'Table'[Boolean Dimension] = \"Approved\"",
              "    )",
              "RETURN",
              "    FORMAT( _Goblins, \"#,##0,.0K\" )",
              "        & \" Approved Claims\""
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "72cf28a2-c0bd-4d61-9e8e-591de15c40f4"
          },
          {
            "name": "Sum (Latest Data Point)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE(",
              "        MAX( 'Table'[Month] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "VAR _LatestMonth = MONTH( _LatestDate )",
              "VAR _LatestYear = YEAR( _LatestDate )",
              "RETURN",
              "    CALCULATE(",
              "        [Sum],",
              "        'Date'[Month (MM)] = _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "KPI Trend",
            "lineageTag": "421c52e3-3109-4681-a6e4-b4c41c09908d",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "KPI Trend Line Title",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "FORMAT(",
              "    [Sum (Latest Data Point)],",
              "    \"#,##0,.0K\"",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "5a737d28-fd3a-4785-bdcd-52e8904a178a",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "KPI Trend Line Subtitle",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE(",
              "        MIN( 'Table'[Month] ),",
              "        VALUES( 'Date'[Year (YYYY)] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "VAR _LatestMonth = MONTH( _LatestDate )",
              "VAR _LatestYear = YEAR( _LatestDate )",
              "VAR _Start =",
              "    CALCULATE(",
              "        [Sum],",
              "        'Date'[Month (MM)] = _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )",
              "VAR _Finish = [Sum (Latest Data Point)]",
              "VAR _Increase = UNICHAR( 8599 )",
              "VAR _Decrease = UNICHAR( 8600 )",
              "VAR _Delta = _Finish - _Start",
              "VAR _Arrow =",
              "    IF(",
              "        _Delta > 0,",
              "        _Increase & \" Trending up\",",
              "        _Decrease & \" Trending down\"",
              "    )",
              "RETURN",
              "    _Arrow"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "cf8326ce-38a8-4c1f-91b8-fdd8f9b89b39"
          },
          {
            "name": "KPI Trend Conditional Formatting",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE(",
              "        MIN( 'Table'[Month] ),",
              "        VALUES( 'Date'[Year (YYYY)] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "VAR _LatestMonth = MONTH( _LatestDate )",
              "VAR _LatestYear = YEAR( _LatestDate )",
              "VAR _Start =",
              "    CALCULATE(",
              "        [Sum],",
              "        'Date'[Month (MM)] = _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )",
              "VAR _Finish = [Sum (Latest Data Point)]",
              "VAR _Increase = UNICHAR( 8599 )",
              "VAR _Decrease = UNICHAR( 8600 )",
              "VAR _Delta = _Finish - _Start",
              "VAR _Arrow =",
              "    IF( _Delta > 0, \"#74afcc\", \"#c56161\" )",
              "RETURN",
              "    _Arrow"
            ],
            "isHidden": true,
            "displayFolder": "Control Colours",
            "lineageTag": "e17710f3-dd05-4d60-ab0d-2faa2d3f6a19"
          },
          {
            "name": "Sum (All Except Latest Point)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE(",
              "        MAX( 'Table'[Month] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "VAR _LatestMonth = MONTH( _LatestDate )",
              "VAR _LatestYear = YEAR( _LatestDate )",
              "RETURN",
              "    CALCULATE(",
              "        [Sum],",
              "        'Date'[Month (MM)] <> _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "KPI Trend",
            "lineageTag": "c9e25d30-0f33-45d0-9b4c-9b0318ce13de",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "KPI Trend Comparison Subtitle",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE(",
              "        MAX( 'Table'[Month] ),",
              "        VALUES( 'Date'[Year (YYYY)] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "VAR _LatestMonth = MONTH( _LatestDate )",
              "VAR _LatestYear = YEAR( _LatestDate )",
              "VAR _Start =",
              "    CALCULATE(",
              "        [Sum (PY)],",
              "        'Date'[Month (MM)] = _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )",
              "VAR _Finish = [Sum (Latest Data Point)]",
              "VAR _Increase = UNICHAR( 9650 )",
              "VAR _Decrease = UNICHAR( 9660 )",
              "VAR _Delta = _Finish - _Start",
              "VAR _Arrow =",
              "    IF(",
              "        _Delta > 0,",
              "        _Increase & \" Higher than last year\",",
              "        _Decrease & \" Lower than last year\"",
              "    )",
              "RETURN",
              "    _Arrow"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "05fa42ff-6662-4b17-a9ac-7ebb19000a65"
          },
          {
            "name": "KPI Trend Comparison Conditional Formatting",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE(",
              "        MAX( 'Table'[Month] ),",
              "        VALUES( 'Date'[Year (YYYY)] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "VAR _LatestMonth = MONTH( _LatestDate )",
              "VAR _LatestYear = YEAR( _LatestDate )",
              "VAR _Start =",
              "    CALCULATE(",
              "        [Sum (PY)],",
              "        'Date'[Month (MM)] = _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )",
              "VAR _Finish = [Sum (Latest Data Point)]",
              "VAR _Increase = UNICHAR( 9650 )",
              "VAR _Decrease = UNICHAR( 9660 )",
              "VAR _Delta = _Finish - _Start",
              "VAR _Arrow =",
              "    IF( _Delta > 0, \"#74afcc\", \"#c56161\" )",
              "RETURN",
              "    _Arrow"
            ],
            "isHidden": true,
            "displayFolder": "Control Colours",
            "lineageTag": "572d9a0b-6fba-4154-b6b0-a073e99ec6eb"
          },
          {
            "name": "KPI Sparkline Trend Up/Down",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "",
              "VAR _LatestDate =",
              "    CALCULATE (",
              "        MIN ( 'Table'[Month] ),",
              "        VALUES ( 'Date'[Year (YYYY)] ),",
              "        REMOVEFILTERS ( )",
              "    )",
              "VAR _LatestMonth = MONTH ( _LatestDate )",
              "VAR _LatestYear = YEAR ( _LatestDate )",
              "VAR _Start =",
              "    CALCULATE (",
              "        [Sum],",
              "        'Date'[Month (MM)] = _LatestMonth,",
              "        'Date'[Year (YYYY)] = _LatestYear",
              "    )",
              "VAR _Finish = [Sum (Latest Data Point)]",
              "VAR _Increase = UNICHAR ( 8599 )",
              "VAR _Decrease = UNICHAR ( 8600 )",
              "VAR _Delta = _Finish - _Start",
              "VAR _Arrow =",
              "    IF ( _Delta > 0, _Increase, _Decrease )",
              "RETURN",
              "    _Arrow"
            ],
            "isHidden": true,
            "displayFolder": "Dynamic Titles",
            "lineageTag": "5d85f1a7-96b2-4a9f-a873-143edcd54282"
          },
          {
            "name": "Gauge %",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Goblins =",
              "    CALCULATE(",
              "        [Sum],",
              "        'Table'[Boolean Dimension] = \"Approved\"",
              "    )",
              "VAR _Perc = DIVIDE( _Goblins, [Sum] )",
              "RETURN",
              "    _Perc"
            ],
            "formatString": "0%;-0%;0%",
            "isHidden": true,
            "displayFolder": "KPI Gauge",
            "lineageTag": "c70eae56-3b9c-4b78-8306-110a1a9c49e2"
          },
          {
            "name": "Issues or No Issues",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Count = [Count]",
              "VAR _Symbol =",
              "    SWITCH(",
              "        TRUE( ),",
              "        _Count > 0, UNICHAR( 10008 ),",
              "        _Count = 0, UNICHAR( 10004 ),",
              "        BLANK( )",
              "    )",
              "RETURN",
              "    _Symbol"
            ],
            "isHidden": true,
            "displayFolder": "Boolean Conditional Text",
            "lineageTag": "0075047b-501d-420f-91c0-6c4974a9ff2f"
          },
          {
            "name": "# Issues (Text)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "REPT( UNICHAR( 10008 ), [Count] )"
            ],
            "isHidden": true,
            "displayFolder": "Repeated Text",
            "lineageTag": "b8c93b14-6f6e-44f4-92a4-208bca84475b"
          }
        ],
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "21661cfde1db4d40be113778b97a84f2"
          }
        ]
      },
      {
        "name": "1. Measures",
        "lineageTag": "4bd4c7d3-ed8c-4fc9-802b-4eb3b0893f5d",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]",
            "formatString": "0",
            "lineageTag": "18e219e8-e8e5-4a4e-8c86-825ff8a663c7",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "1. Measures",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "{ 1 }"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Percentage",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Total =",
              "    CALCULATE(",
              "        SUM( 'Table'[Quantitative] ),",
              "        REMOVEFILTERS( )",
              "    )",
              "RETURN",
              "    DIVIDE(",
              "        SUM( 'Table'[Quantitative] ),",
              "        _Total",
              "    )",
              "        + 0.15"
            ],
            "formatString": "0%;-0%;0%",
            "displayFolder": "Percent",
            "lineageTag": "ccbbf42b-88e3-4b49-8192-f592b6d02dc4"
          },
          {
            "name": "Sum",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "SUM( 'Table'[Quantitative] )"
            ],
            "formatString": "  #,##0",
            "displayFolder": "Sum",
            "lineageTag": "71445de7-2cd6-43b8-81cb-8b9dd1159740",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isCustom\":true}"
              }
            ]
          },
          {
            "name": "Sum (CY YTD)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "CALCULATE(",
              "    [Sum],",
              "    CALCULATETABLE(",
              "        DATESYTD( 'Date'[Date] ),",
              "        'Date'[DatesWithSales (True/False)]",
              "    )",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Sum\\YTD",
            "lineageTag": "202a6bc8-71c3-41cc-9349-cde551b031a0"
          },
          {
            "name": "Sum (PY)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "CALCULATE(",
              "    [Sum],",
              "    SAMEPERIODLASTYEAR( 'Date'[Date] )",
              ")"
            ],
            "formatString": "0",
            "displayFolder": "Sum",
            "lineageTag": "6fe52e9a-2944-457b-97e7-ee4aadcdc2cc"
          },
          {
            "name": "Sum (Δ PY YTD)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _CY = [Sum (CY YTD)]",
              "VAR _PY = [Sum (PY YTD)]",
              "VAR _Delta = _CY - _PY",
              "RETURN",
              "    _Delta"
            ],
            "formatString": "+#,##0;-#,##0;#,##0",
            "displayFolder": "Sum\\YTD\\vs. PY",
            "lineageTag": "4cb18752-6c6d-444e-b2dd-dff2e86ce817",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isCustom\":true}"
              }
            ]
          },
          {
            "name": "Sum (Δ% PY YTD)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "DIVIDE(",
              "    [Sum (Δ PY YTD)],",
              "    [Sum (PY)]",
              ")"
            ],
            "displayFolder": "Sum\\YTD\\vs. PY",
            "lineageTag": "546753a4-f8e4-45be-92c8-3a0ccdc60f66",
            "formatStringDefinition": {
              "expression": [
                "VAR _UpArrow = UNICHAR( 8595 )",
                "VAR _DownArrow = UNICHAR( 8593 )",
                "RETURN",
                "    _DownArrow & \" #,##0.0%\" & \";\"",
                "        &    // Negative numbers",
                "        _UpArrow",
                "        & \" #,##0.0%\"",
                "        & \";\"",
                "        &      // Positive numbers",
                "        \"#,##0.0\"                           // Zero"
              ]
            },
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isCustom\":true}"
              }
            ]
          },
          {
            "name": "Count",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "COUNTROWS(",
              "    VALUES( 'Table'[Dimension] )",
              ")"
            ],
            "displayFolder": "Count",
            "lineageTag": "4b4de92d-e3ee-4139-a985-1b450ff40060",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Sum (PY YTD)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "CALCULATE(",
              "    [Sum (PY)],",
              "    CALCULATETABLE(",
              "        DATESYTD( 'Date'[Date] ),",
              "        'Date'[DatesWithSales (True/False)]",
              "    )",
              ")"
            ],
            "displayFolder": "Sum\\YTD",
            "lineageTag": "56036eba-a803-48bd-9ad7-2d0f2af882bc",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Sum (% of PY YTD)",
            "expression": [
              "",
              "--Disclaimer: DAX in these templates doesn't follow best practices",
              "--            Don't use this DAX as-is; the templates are intended to be illustrative.",
              "",
              "VAR _Actuals = [Sum (CY YTD)]",
              "VAR _Target = [Sum (PY YTD)]",
              "VAR _Perc = DIVIDE( _Actuals, _Target )",
              "RETURN",
              "    _Perc"
            ],
            "formatString": "#,##0 %",
            "displayFolder": "Sum\\YTD\\vs. PY",
            "lineageTag": "efdaa006-24a4-4a68-a810-343bf07e07ee"
          },
          {
            "name": "Average",
            "expression": "AVERAGE ( 'Table'[Quantitative] )",
            "lineageTag": "c753646f-4f8f-4d29-b960-da8cc2c49070"
          }
        ],
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "724d8a875a79418db6f9113a2cf5d8eb"
          }
        ]
      },
      {
        "name": "Date",
        "lineageTag": "42924f7d-1875-49e1-abad-09dccdadd421",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Date]",
            "formatString": "YYYY/MM/DD",
            "displayFolder": "3. Calendar Date",
            "lineageTag": "79acd4a7-177f-46ac-b3f5-bd96e78c9259",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isCustom\":true}"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "Year (YYYY)",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Year (YYYY)]",
            "formatString": "0",
            "displayFolder": "1. Year",
            "lineageTag": "e06802b7-acbd-4c08-aef6-9e0a94266bbd",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "Month Year (MMYYYY)",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Month Year (MMYYYY)]",
            "displayFolder": "2. Month",
            "lineageTag": "ce8c040b-4b49-4b02-aade-3f61ce62b490",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "Month (MM)",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Month (MM)]",
            "formatString": "0",
            "displayFolder": "2. Month",
            "lineageTag": "584fa0c0-68d8-464b-a6f9-d1e9016a4bdc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "Month (MMM)",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Month (MMM)]",
            "sortByColumn": "Month (MM)",
            "displayFolder": "2. Month",
            "lineageTag": "81b7a0c8-099d-443f-87e9-eb904f328750",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "DatesWithSales (True/False)",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[DatesWithSales (True/False)]",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "displayFolder": "4. Indicators",
            "lineageTag": "2313f5c5-cfd7-4d66-a709-8f57cc2b8adf",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          },
          {
            "type": "calculatedTableColumn",
            "name": "IsThisYear (True/False)",
            "dataType": "boolean",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[IsThisYear (True/False)]",
            "displayFolder": "4. Indicators",
            "lineageTag": "3d5a6501-7143-47f8-9b21-163efaf9a014"
          }
        ],
        "partitions": [
          {
            "name": "Date",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "VAR _LatestDate = MAX ( 'Table'[Month] )",
                "RETURN",
                "    ADDCOLUMNS (",
                "        CALENDAR (",
                "            DATE ( 2022, 1, 1 ),",
                "            DATE ( 2023, 12, 31 )",
                "        ),",
                "        \"Year (YYYY)\", YEAR ( ''[Date] ),",
                "        \"Month Year (MMYYYY)\",",
                "            FORMAT ( ''[Date], \"MMYYYY\" ),",
                "        \"Month (MM)\", MONTH ( ''[Date] ),",
                "        \"Month (MMM)\", FORMAT ( ''[Date], \"MMM\" ),",
                "        \"DatesWithSales (True/False)\",",
                "            ''[Date] < _LatestDate,",
                "        \"IsThisYear (True/False)\",",
                "            YEAR ( ''[Date] ) = YEAR ( _LatestDate )",
                "    )"
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "163d92fff6ed49ff9051b07d98c0444d"
          }
        ]
      },
      {
        "name": "4. Report-Specific SVG Measures",
        "lineageTag": "f4ab3a84-bd81-4db3-82e0-074ee7960e80",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Value",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isHidden": true,
            "sourceColumn": "[Value]",
            "formatString": "0",
            "lineageTag": "ea94bcb1-fc74-4dcb-bb99-815fc2be8ccb",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "Card with Columns and Target",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _spaceBetweenColumns = 5.5 // Space that will be reserved between columns",
              "VAR _maxSizeOfColumn = 3.5 // Max size of column, if the calculated value is bigger than this, the column will be this size",
              "VAR _columnRounding = 5 // Rounding of column corners",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 250 // Height size of the SVG",
              "VAR _initialTbl =",
              "    // ADD YOUR TABLE, PERIOD COLUMN (DATE, MONTH, QUARTER, YEAR,...) + MEASURE HERE",
              "    ADDCOLUMNS (",
              "        SELECTCOLUMNS (",
              "            SUMMARIZE ( 'Table', 'Table'[Quantitative] ),",
              "            \"@xAxisPeriod\", 'Table'[Quantitative]",
              "        ),",
              "        \"@val\", [Sum]",
              "    )",
              "VAR _target = [Average] // Target value or measure",
              "",
              "/* TEXT DECLARTIONS */",
              "VAR _firstLineInitialText = \"Total target is on\"",
              "VAR _firstLineEndText = \"~ missing\"",
              "VAR _secondLineInitialText = \"Period target is on\"",
              "VAR _secondLineEndText = \"~ sold\"",
              "VAR _thirdLineMiddleText = \"of\"",
              "VAR _thirdLineEndText = \"months were successful\" ",
              "",
              "/* COLORS DECLARTIONS */",
              "VAR _grey = \"#E6E6E6\" // Will be used for all other columns",
              "VAR _activePartsColor = \"#658E95\" // Will be used for all highly colored parts of card",
              "VAR _darkGrey = \"#808080\" // Will be used for all text",
              "VAR _targetLineColor = \"#A8A8A8\" // Will be used for target line",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' width='\" & _width & \"' height='\" & _height & \"'>\"",
              "VAR _svgEnd = \"</svg>\" ",
              "",
              "/* CSS DECLARATIONS */",
              "VAR _style = \"<style>",
              "    text{",
              "        font-family:Segoe UI;",
              "    }",
              "    .columns{",
              "         opacity: 1;",
              "         outline: none;",
              "    }",
              "    .lineDeclaration{",
              "        stroke:\" & _targetLineColor & \"; ",
              "        stroke-width:1.25;",
              "        stroke-dasharray:5 5;",
              "    }",
              "    .txtGroup{",
              "        dominant-baseline: middle;",
              "        text-anchor:start;",
              "    }",
              "    .bolder{",
              "        font-weight: bold;",
              "    }",
              "</style>\" ",
              "",
              "/* CALCULATION */",
              "VAR _preparedTbl =",
              "    ADDCOLUMNS (",
              "        _initialTbl,",
              "        \"@rowNum\", ROWNUMBER ( _initialTbl, ORDERBY ( [@xAxisPeriod], ASC ) )",
              "    )",
              "VAR _maxResultedValue =",
              "    MAXX ( _preparedTbl, [@val] )",
              "VAR _rowCounter =",
              "    COUNTROWS ( _preparedTbl )",
              "VAR _modifiedValue = _rowCounter * _target",
              "VAR _resultSizeOfColumns =",
              "    VAR _cal =",
              "        ROUND (",
              "            DIVIDE ( 100 - ( ( _rowCounter + 1 ) * _spaceBetweenColumns ), _rowCounter ),",
              "            1",
              "        )",
              "    RETURN",
              "        IF ( _cal > _maxSizeOfColumn, _maxSizeOfColumn, _cal )",
              "VAR _columns =",
              "    CONCATENATEX (",
              "        _preparedTbl,",
              "        VAR _colorOfColumn =",
              "            IF ( _target < [@val], _activePartsColor, _grey ) // Rules for coloring columns",
              "        VAR _startOfColumn =",
              "            ROUND ( DIVIDE ( [@val], _maxResultedValue ) * 40, 1 )",
              "        VAR _positionCounter = ( ( [@rowNum] - 1 ) * _resultSizeOfColumns ) + ( _spaceBetweenColumns * [@rowNum] )",
              "        RETURN",
              "            \"<rect class='columns' x='\" & _positionCounter & \"%' y='\" & 85 - _startOfColumn & \"%' width='\" & _resultSizeOfColumns & \"%' height='\" & _startOfColumn & \"%' fill='\" & _colorOfColumn & \"' rx='\" & _columnRounding & \"' />\"",
              "    )",
              "VAR _targetLine =",
              "    VAR _y =",
              "        85",
              "            - ROUND ( DIVIDE ( _target, _maxResultedValue ) * 40, 1 )",
              "    RETURN",
              "        \"<line class='lineDeclaration' x1='\" & _spaceBetweenColumns & \"%' x2='\" & 100 - _spaceBetweenColumns & \"%' y1='\" & _y & \"%' y2='\" & _y & \"%' />\"",
              "VAR _initialText =",
              "    \"<g class='txtGroup'>\" & \"<text y='4%' x='2.5%' font-size='107.5%' fill='\" & _darkGrey & \"'><tspan class='bolder'> \" & _firstLineInitialText & \" <tspan fill='\" & _activePartsColor & \"'>\"",
              "        & FORMAT (",
              "            ROUND ( DIVIDE ( SUMX ( _preparedTbl, [@val] ), _modifiedValue ), 2 ),",
              "            \"0%\"",
              "        ) & \"</tspan></tspan><tspan font-size='80%'> \" & _firstLineEndText & \" \"",
              "        & _modifiedValue - SUMX ( _preparedTbl, [@val] ) & \" </tspan>",
              "    </text>\" & \"<text y='16.5%' x='2.5%' fill='\" & _darkGrey & \"'>",
              "        \" & _secondLineInitialText & \" <tspan fill='\" & _activePartsColor & \"' class='bolder'>\"",
              "        & FORMAT (",
              "            ROUND ( DIVIDE ( SUMX ( _preparedTbl, [@val] ), _modifiedValue ), 2 ),",
              "            \"0%\"",
              "        ) & \"</tspan> <tspan font-size='80%'> \" & _secondLineEndText & \" \"",
              "        & SUMX ( _preparedTbl, [@val] ) & \" </tspan>",
              "    </text>\" & \"<text y='29%' x='2.5%' fill='\" & _darkGrey & \"'>",
              "        <tspan fill='\" & _activePartsColor & \"' class='bolder'>\"",
              "        & COUNTROWS ( FILTER ( _preparedTbl, [@val] >= _target ) ) & \"</tspan> \" & _thirdLineMiddleText & \"",
              "        <tspan class='bolder'>\" & _rowCounter & \"</tspan> \" & _thirdLineEndText & \"",
              "    </text>",
              "</g>\"",
              "VAR SVGImageURL = _svgDeclaration & _svgHeader & _style & _initialText & _targetLine & _columns & _svgEnd",
              "RETURN",
              "    SVGImageURL",
              ""
            ],
            "lineageTag": "6a23f99d-c620-4dff-8827-4e4ba637002a",
            "dataCategory": "ImageUrl",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Card with Donut progress",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _total = [Sum (PY YTD)]  // Will be used as a target",
              "VAR _value = [Sum (CY YTD)] // Will be used as a current value",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 220 // Height size of the SVG",
              "VAR _CanvasSize = MIN( _height, _width ) // Canvas size",
              "VAR _paddning = 15 // Padding between the circle and the canvas",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "",
              "/* PRE CALCULATION */",
              "VAR _halfSize = _CanvasSize / 2 // Half of the canvas size",
              "VAR _r = _halfSize - _paddning * 1.5 // Radius of the circle",
              "VAR _round = 2 * PI( ) * _r // Circumference of the circle",
              "VAR _perc = _value / _total // Percentage of the current value",
              "VAR _ratio = _round - _round * _perc // Ratio of the current value",
              "VAR _clr =  // Determine the color of the circle based on the percentage",
              "SWITCH(",
              "        TRUE( ),",
              "        _perc >= 0.75, _positive, // Positive Color",
              "        _perc >= 0.5, _neutral, // Neutral Color",
              "        _negative // Negative Color",
              "    )",
              "",
              "/* STYLE DECLARTIONS */",
              "VAR _styles =",
              "    \"",
              "  <style>",
              "    text{",
              "        font-family: Segoe UI;",
              "    }",
              "    .backgroundCircle{",
              "      transform:rotate(-90deg) translate(-\"",
              "        & ( _height + _width ) / 2",
              "        & \"px, \"",
              "        & ( _width - _height ) / 2",
              "        & \"px);",
              "    }",
              "    .backgroundCircle{",
              "      fill: transparent;",
              "      stroke-width: \"",
              "        & _paddning",
              "        & \";",
              "    }",
              "    .background{",
              "      stroke: #e0e0e0;",
              "    }",
              "    .filling{",
              "      stroke: \"",
              "        & _clr",
              "        & \";",
              "      stroke-linecap: round;",
              "      stroke-dasharray: \"",
              "        & _round",
              "        & \";",
              "      stroke-dashoffset: \"",
              "        & _ratio",
              "        & \";",
              "    }",
              "    .mainText{",
              "      fill: \"",
              "        & _clr",
              "        & \";",
              "      font-size: 225%;",
              "      text-anchor: middle;",
              "      dominant-baseline: middle;",
              "      font-weight: bold;",
              "    }",
              "    .subTexts{",
              "      fill: #CCCCCC;",
              "      font-size: 95%;",
              "      dominant-baseline: middle;",
              "    }",
              "    .leftPositioned{",
              "        text-anchor: end;",
              "    }",
              "    .rightPositioned{",
              "        text-anchor: start;",
              "    }",
              "    .bolden{",
              "        font-weight: bold;",
              "    }",
              "  </style>",
              "\"",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' height='\" & _height & \"' width='\" & _width & \"'>\"",
              "VAR _svgEnd = \"</svg>\"",
              "",
              "/* CALCULATION */",
              "VAR _sv =",
              "    \"",
              "  <g class='backgroundCircle'>",
              "  <circle r='\" & _r & \"' cx='50%' cy='50%' class='background' />",
              "  <circle r='\" & _r",
              "        & \"' cx='50%' cy='50%' class='filling'/>",
              "  </g>",
              "  <g class='mainText'>",
              "  <text x='50%' y='37.5%' >\"",
              "        & FORMAT( _perc, \"0.0%\" )",
              "        & \"</text>",
              "  </g>",
              "  <g class='subTexts'>",
              "  <g class='leftPositioned'>",
              "  <text x='51%' y='50.5%' >\"",
              "        & \"Target:\"",
              "        & \"</text>",
              "  <text x='51%' y='60%' >\"",
              "        & \"Current:\"",
              "        & \"</text>",
              "  <text x='51%' y='69.5%' class='bolden'>\"",
              "        & \"Missing:\"",
              "        & \"</text>",
              "  </g>",
              "  <g class='rightPositioned'>",
              "  <text x='53%' y='50.5%' >\"",
              "        & _total",
              "        & \"</text>",
              "  <text x='53%' y='60%' >\"",
              "        & ROUND( _value, 1 )",
              "        & \"</text>",
              "  <text x='53%' y='69.5%' class='bolden'>\"",
              "        & ROUND( _total - _value, 1 )",
              "        & \"</text>",
              "  </g>",
              "  </g>",
              "\"",
              "VAR _result = _svgDeclaration & _svgHeader & _styles & _sv & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "9f7ba69f-7cec-4a41-a562-10e51f9ac0a2",
            "dataCategory": "ImageUrl",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Text Card ShowCase One",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _yearDefinition =",
              "    MAX ( 'Table'[Year] ) // Get the year from the context",
              "VAR _actualQuantity = [Sum (CY YTD)] // Get the actual quantity from the context (Usually it would be measure for the actual year)",
              "VAR _previousQuantity = [Sum (PY YTD)] // Get the previous quantity from the context (Usually it would be measure for the previous year)",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _grey = \"#BBB\" // Grey for normal text",
              "VAR _bolderGrey = \"#808080\" // Grey for bolder text",
              "",
              "/* STYLE DECLARTIONS */",
              "VAR _style = ",
              "\"<style>",
              "    text{",
              "        font-family: Segoe UI;",
              "    }",
              ".mainText{",
              "    font-size:85%;",
              "    fill:\" & _grey & \";",
              "}",
              ".bolder{",
              "    font-weight:bold;",
              "    fill:\" & _bolderGrey & \";",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _header = \"data:image/svg+xml;utf8,\"",
              "VAR _svgDeclaration = \"<svg xmlns='http://www.w3.org/2000/svg'>\"",
              "VAR _svgEnding = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _div =",
              "    DIVIDE ( _actualQuantity, _previousQuantity ) - 1",
              "VAR _colorForPercentage =",
              "    SWITCH ( TRUE (), _div > 0, _positive, _div < 0, _negative, _neutral )",
              "VAR _content =",
              "    \"<g class='mainText'>",
              "        <text y='10%'>",
              "            In year \" & _yearDefinition & \" were <tspan class='bolder'>\" & _actualQuantity & \"</tspan> members of individual races.",
              "        </text>",
              "        <text y='22.5%'>",
              "            It is about <tspan class='bolder'>\"",
              "        & FORMAT ( _actualQuantity - _previousQuantity, \"+# more;-# less\" ) & \" <tspan font-size='85%' fill='\" & _colorForPercentage & \"'>( \"",
              "        & FORMAT ( _div, \"+0.0%;-0.0%\" ) & \")</tspan></tspan> then previous year.",
              "        </text>",
              "    </g>\"",
              "RETURN",
              "    _header & _svgDeclaration & _style & _content & _svgEnding"
            ],
            "lineageTag": "c2f6787a-34a5-42fc-99a8-da203f868e63",
            "dataCategory": "ImageUrl",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Text Card ShowCase Two",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _yearDefinition =",
              "    MAX ( 'Table'[Year] ) // Get the year from the context",
              "VAR _tableInitiator = // Table with declaration of dimension and scoped measure",
              "    CALCULATETABLE (",
              "        ADDCOLUMNS ( VALUES ( 'Table'[Dimension] ), \"@counter\", [Sum] ),",
              "        KEEPFILTERS ( 'Table'[Year] = _yearDefinition )",
              "    ) ",
              "    ",
              "/* STYLE DECLARTIONS */",
              "VAR _style = ",
              "\"<style>",
              "    text{",
              "        font-family: Segoe UI;",
              "    }",
              ".mainText{",
              "    font-size:85%;",
              "    fill:#BBB;",
              "}",
              ".bolder{",
              "    font-weight:bold;",
              "    fill:#808080;",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _header = \"data:image/svg+xml;utf8,\"",
              "VAR _svgDeclaration = \"<svg xmlns='http://www.w3.org/2000/svg'>\"",
              "VAR _svgEnding = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _counter =",
              "    COUNTROWS ( _tableInitiator )",
              "VAR _topRow =",
              "    INDEX ( 1, _tableInitiator, ORDERBY ( [@counter], DESC ) )",
              "VAR _topRace =",
              "    SELECTCOLUMNS ( _topRow, 'Table'[Dimension] )",
              "VAR _topRaceMembers =",
              "    SELECTCOLUMNS ( _topRow, [@counter] )",
              "VAR _content = ",
              "\"<g class='mainText'>",
              "        <text y='10%'>",
              "            In evidence are <tspan class='bolder'>\" & _counter & \"</tspan> races.",
              "        </text>",
              "        <text y='22.5%'>",
              "            Largest race currently are <tspan class='bolder'>\" & _topRace & \"</tspan> with <tspan class='bolder'>\" & _topRaceMembers & \"</tspan> members.",
              "        </text>",
              "    </g>\"",
              "RETURN",
              "    _header & _svgDeclaration & _style & _content & _svgEnding",
              ""
            ],
            "lineageTag": "f1b5120b-0bad-4f65-9a59-49b37d2d3a28",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Text Card ShowCase Three",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _yearDefinition =",
              "    MAX ( 'Table'[Year] ) // Get the year from the context",
              "VAR _tableInitiator = // Table + sub-dimension + measures scoped on specific dimension (Usually would be based on other calculations)",
              "    CALCULATETABLE (",
              "        ADDCOLUMNS ( VALUES ( 'Table'[SubDimension] ), \"@counter\", [Sum] ),",
              "        KEEPFILTERS ( 'Table'[Year] = _yearDefinition && 'Table'[Dimension] = \"Elves\" )",
              "    ) ",
              "    ",
              "/* STYLE DECLARTIONS */",
              "VAR _style =",
              "\"<style>",
              "    text{",
              "        font-family: Segoe UI;",
              "    }",
              ".mainText{",
              "    font-size:85%;",
              "    fill:#BBB;",
              "}",
              ".bolder{",
              "    font-weight:bold;",
              "    fill:#808080;",
              "}",
              ".smallerItalic{",
              "    font-size:85%;",
              "    font-style: italic;",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _header = \"data:image/svg+xml;utf8,\"",
              "VAR _svgDeclaration = \"<svg xmlns='http://www.w3.org/2000/svg'>\"",
              "VAR _svgEnding = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _counter =",
              "    COUNTROWS ( _tableInitiator )",
              "VAR _topRow =",
              "    INDEX ( 1, _tableInitiator, ORDERBY ( [@counter], DESC ) )",
              "VAR _topRace =",
              "    SELECTCOLUMNS ( _topRow, 'Table'[SubDimension] )",
              "VAR _topRaceMembers =",
              "    SELECTCOLUMNS ( _topRow, [@counter] )",
              "VAR _content =",
              "\"<g class='mainText'>",
              "        <text y='10%'>",
              "            They work in <tspan class='bolder'>\" & _counter & \"</tspan> professions",
              "        </text>",
              "        <text y='22.5%'>",
              "           and mostly they are <tspan class='bolder'>\" & _topRace & \"</tspan><tspan class='smallerItalic'> (\" & _topRaceMembers & \")</tspan>.",
              "        </text>",
              "    </g>\"",
              "RETURN",
              "    _header & _svgDeclaration & _style & _content & _svgEnding",
              ""
            ],
            "lineageTag": "901fd391-ff5d-42ab-879b-6c87c8fbd39b",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Slope KPI Chart",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _preparedTable = // Prepare the table for the chart",
              "    ADDCOLUMNS (",
              "        ADDCOLUMNS (",
              "            SUMMARIZE ( 'Table', 'Table'[Dimension] ), // Table + Category column",
              "            \"@currentValue\", [Sum (CY YTD)], // Current Value",
              "            \"@PreviousValue\", [Sum (PY YTD)] // Previous Value",
              "        ),",
              "        \"@change\", [@PreviousValue] - [@currentValue]",
              "    )",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 250 // Height size of the SVG",
              "VAR _padding = 15 // Padding of the SVG",
              "VAR _ballsRadius = 5 // Radius of the balls",
              "VAR _leftXCategory = \"2022\" // Left X category",
              "VAR _rightXCategory = \"2023\"  // Right X category",
              "",
              "/* COLORS DECLARTIONS */",
              "VAR _green = \"#658E95\"",
              "VAR _red = \"#D64550\"",
              "VAR _grey = \"#EDEBE9\"",
              "VAR _lightGrey = \"#F0F0F0\"",
              "VAR _darkGrey = \"#CCCCCC\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' height='\" & _height & \"' width='\" & _width & \"'>\"",
              "VAR _svgEnd = \"</svg>\"",
              "",
              "/* STYLE DECLARTIONS */",
              "VAR _style = \"",
              "<style>",
              "text{",
              "    font-family: Segoe UI;",
              "}",
              ".greyText{",
              "     fill: \" & _darkGrey & \";",
              "}",
              ".middleText{",
              "    text-anchor: middle; ",
              "    font-size: 10;",
              "}",
              ".linedText{",
              "    dominant-baseline: middle; ",
              "    font-size: 10;",
              "}",
              ".bolder{",
              "    font-weight: bold;",
              "} ",
              ".baseLines{",
              "    stroke-width: 2;",
              "    stroke: \" & _lightGrey & \"; ",
              "    stroke-dasharray: 5,5;",
              "}",
              ".lineStroke{",
              "    stroke-width: 3;",
              "}",
              "</style>\" ",
              "",
              "/* CALCULATION */",
              "VAR _doublePadding = _padding * 2",
              "VAR _halfPadding = _padding / 2",
              "VAR _usableHeight = _height - _doublePadding * 2",
              "VAR _textYPostion = _usableHeight + _doublePadding",
              "VAR _betweenLineSpacer = _doublePadding * 3",
              "VAR _topRow =",
              "    INDEX ( 1, _preparedTable, ORDERBY ( MAX ( [@currentValue], [@PreviousValue] ), DESC ) )",
              "VAR _bottomRow =",
              "    INDEX ( 1, _preparedTable, ORDERBY ( MAX ( [@currentValue], [@PreviousValue] ), ASC ) )",
              "VAR _maxValue =",
              "    MAXX ( _topRow, MAX ( [@currentValue], [@PreviousValue] ) )",
              "VAR _maxx = _maxValue * 1.1",
              "VAR _maxC =",
              "    MAXX ( _preparedTable, [@change] )",
              "VAR _minValue =",
              "    MINX ( _bottomRow, MIN ( [@currentValue], [@PreviousValue] ) )",
              "VAR _minx = _minValue * 0.6",
              "VAR _minC =",
              "    MINX ( _preparedTable, [@change] )",
              "VAR _diff = ( _maxx - _minx )",
              "VAR _baseTexts =",
              "    VAR _topOfLine =",
              "        (",
              "            1",
              "                - DIVIDE ( _maxValue - _minx, _diff )",
              "        ) * _usableHeight + _halfPadding",
              "    VAR _bottomOfLine =",
              "        (",
              "            1",
              "                - DIVIDE ( _minValue - _minx, _diff )",
              "        ) * _usableHeight + _halfPadding",
              "    RETURN",
              "        \"<g class='middleText greyText'>",
              "        <text x='\" & _doublePadding & \"' y='\" & _textYPostion & \"'>\" & _leftXCategory & \"</text>",
              "        <text x='\" & _betweenLineSpacer & \"' y='\" & _textYPostion & \"'>\" & _rightXCategory & \"</text>",
              "    </g>",
              "    <g class='baseLines'>",
              "        <line x1='\" & _doublePadding & \"' x2='\" & _doublePadding & \"' y1='\" & _topOfLine & \"' y2='\" & _bottomOfLine & \"'/>",
              "        <line x1='\" & _betweenLineSpacer & \"' x2='\" & _betweenLineSpacer & \"' y1='\" & _topOfLine & \"' y2='\" & _bottomOfLine & \"'/>",
              "    </g>\"",
              "VAR _circles =",
              "    CONCATENATEX (",
              "        FILTER ( _preparedTable, NOT [@change] IN { _maxC, _minC } ),",
              "        VAR _color =",
              "            SWITCH ( [@change], _maxC, _green, _minC, _red, _grey )",
              "        VAR _yOne =",
              "            (",
              "                1",
              "                    - DIVIDE ( [@currentValue] - _minx, _diff )",
              "            ) * _usableHeight + _halfPadding",
              "        VAR _yTwo =",
              "            (",
              "                1",
              "                    - DIVIDE ( [@PreviousValue] - _minx, _diff )",
              "            ) * _usableHeight + _halfPadding",
              "        RETURN",
              "            \"<circle cx='\" & _doublePadding & \"' cy='\" & _yOne & \"' r='\" & _ballsRadius & \"' fill='\" & _color & \"'/>\" & \"<circle cx='\" & _betweenLineSpacer & \"' cy='\" & _yTwo & \"' r='\" & _ballsRadius & \"' fill='\" & _color & \"'/>\" & \"<line class='lineStroke' x1='\" & _doublePadding & \"' x2='\" & _betweenLineSpacer & \"' y1='\" & _yOne & \"' y2='\" & _yTwo & \"' stroke='\" & _color & \"'/>\"",
              "                & IF (",
              "                    _color <> _grey,",
              "                    \"<text class='bolderLinedText' x='\" & _betweenLineSpacer + _padding & \"' y='\" & _yTwo & \"' fill='\" & _color & \"'>\" & 'Table'[Dimension] & \"</text>\",",
              "                    \"\"",
              "                )",
              "    )",
              "VAR _circlesUps =",
              "    CONCATENATEX (",
              "        FILTER ( _preparedTable, [@change] IN { _maxC, _minC } ),",
              "        VAR _color =",
              "            SWITCH ( [@change], _maxC, _green, _minC, _red, _grey )",
              "        VAR _div =",
              "            DIVIDE ( [@PreviousValue], [@currentValue] ) - 1",
              "        VAR _resultTexts =",
              "            SWITCH ( [@change], _maxC, \"increased by \", _minC, \"decreased by \" ) & \"<tspan class='bolder' fill='\" & _color & \"'>\"",
              "                & FORMAT ( _div, \"0.0%;0.0%\" ) & \"</tspan>\"",
              "        VAR _yOne =",
              "            (",
              "                1",
              "                    - DIVIDE ( [@currentValue] - _minx, _diff )",
              "            ) * _usableHeight + _halfPadding",
              "        VAR _yTwo =",
              "            (",
              "                1",
              "                    - DIVIDE ( [@PreviousValue] - _minx, _diff )",
              "            ) * _usableHeight + _halfPadding",
              "        RETURN",
              "            \"<circle cx='\" & _doublePadding & \"' cy='\" & _yOne & \"' r='\" & _ballsRadius & \"' fill='\" & _color & \"'/>\" & \"<circle cx='\" & _betweenLineSpacer & \"' cy='\" & _yTwo & \"' r='\" & _ballsRadius & \"' fill='\" & _color & \"'/>\" & \"<line class='lineStroke' x1='\" & _doublePadding & \"' x2='\" & _betweenLineSpacer & \"' y1='\" & _yOne & \"' y2='\" & _yTwo & \"' stroke='\" & _color & \"'/>\"",
              "                & IF (",
              "                    _color <> _grey,",
              "                    \"<text class='linedText' x='\" & _betweenLineSpacer + _padding & \"' y='\"",
              "                        & IF ( [@change] = _maxC, \"45%\", \"55%\" ) & \"' fill='\" & _darkGrey & \"'><tspan class='bolder' fill='\" & _color & \"'>\" & 'Table'[Dimension] & \"</tspan> \" & _resultTexts & \"</text>\",",
              "                    \"\"",
              "                )",
              "    )",
              "VAR _result = _svgDeclaration & _svgHeader & _style & _baseTexts & _circles & _circlesUps & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "1c55942f-0cf8-4a09-b92e-708b271da829",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Progress Simple bar chart",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _target = [Sum (PY YTD)]  // Will be used as a target",
              "VAR _value = [Sum (CY YTD)] // Will be used as a current value",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 220 // Height size of the SVG",
              "VAR _paddning = 15 // Padding between the circle and the canvas",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _darkGrey = \"#242425\" // Darkgrey Color",
              "VAR _stateColor = IF( _target > _value, _negative, _positive )",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' height='\" & _height & \"' width='\" & _width & \"'>\"",
              "VAR _svgEnd = \"</svg>\"",
              "",
              "/* STYLE DECLARATIONS */",
              "VAR _style =",
              "    \"",
              "<style>",
              "text{",
              "    font-family: Segoe UI;",
              "    dominant-baseline: middle;",
              "    text-anchor: middle;",
              "}",
              ".progressBar{",
              "    fill: \"",
              "        & _stateColor",
              "        & \";",
              "}",
              ".endLine{",
              "    stroke: \"",
              "        & _darkGrey",
              "        & \";",
              "    stroke-width: 3;",
              "    stroke-linecap: round;",
              "    stroke-dasharray: 2.5 5;",
              "}",
              ".mainText{",
              "    fill: \"",
              "        & _stateColor",
              "        & \";",
              "    font-size: 125%;",
              "    font-weight: bold;",
              "}",
              ".supportText{",
              "    fill:#BBB;",
              "    font-size: 100%;",
              "}",
              "</style>\"",
              "",
              "/* CALCULATION */",
              "VAR _doublePadding = ( _paddning * 2 )",
              "VAR _usableWidth = _width - ( _doublePadding * 2 )",
              "VAR _usableHeight = _height - _doublePadding",
              "VAR _yStartPosition = _height * 0.50",
              "VAR _yEndPosition = _usableHeight * 0.25",
              "VAR _barWidth = IF( _target >= _value, DIVIDE( _value, _target ) * _usableWidth, _usableWidth )",
              "VAR _linePosition = IF( _target >= _value, _width - _doublePadding, DIVIDE( _target, _value ) * _usableWidth )",
              "VAR _bar =",
              "    \"<rect class='progressBar' x='\" & _doublePadding & \"' y='\" & _yStartPosition & \"' width='\" & _barWidth & \"' height='\"",
              "        & _yEndPosition",
              "        & \"' rx='1.5%' />\"",
              "VAR _endLine =",
              "    \"<line class='endLine' x1='\" & _linePosition & \"' x2='\" & _linePosition & \"' y1='\" & _yStartPosition * 0.95 & \"' y2='\"",
              "        & ( _yStartPosition + _yEndPosition ) * 1.05",
              "        & \"' />\"",
              "VAR _texts =",
              "    \"<text class='mainText' x='50%' y='\" & _yStartPosition * 0.60 & \"'>\" & FORMAT( DIVIDE( _value, _target ), \"0.0%\" )",
              "        & \" ~ \"",
              "        & IF( ( _value - _target ) < 0, \"Not filled\", \"Filled\" )",
              "        & \"</text>",
              "    <text class='supportText' x='50%' y='\"",
              "        & _yStartPosition * 0.825",
              "        & \"'>Current: \"",
              "        & _value",
              "        & \" | Target: \"",
              "        & _target",
              "        & \"</text>\"",
              "VAR _result = _svgDeclaration & _svgHeader & _style & _bar & _texts & _endLine & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "dc313c4a-8e08-46bf-a9a4-c430139a0ddf",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Progress More Complex bar chart",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _target = [Sum (PY YTD)]  // Will be used as a target",
              "VAR _value = [Sum (CY YTD)] // Will be used as a current value",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 220 // Height size of the SVG",
              "VAR _paddning = 15 // Padding between the circle and the canvas",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _darkGrey = \"#242425\" // Darkgrey Color",
              "VAR _stateColor = IF( _target > _value, _negative, _positive )",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' height='\" & _height & \"' width='\" & _width & \"'>\"",
              "VAR _svgEnd = \"</svg>\"",
              "",
              "/* STYLE DECLARATIONS */",
              "VAR _style =",
              "    \"",
              "<style>",
              "text{",
              "    font-family: Segoe UI;",
              "    dominant-baseline: middle;",
              "    text-anchor: middle;",
              "}",
              ".progressBar{",
              "    fill: #CCC;",
              "}",
              ".endLine{",
              "    stroke: \"",
              "        & _darkGrey",
              "        & \";",
              "    stroke-width: 3;",
              "    stroke-linecap: round;",
              "    stroke-dasharray: 2.5 5;",
              "}",
              ".mainText{",
              "    fill: \"",
              "        & _stateColor",
              "        & \";",
              "    font-size: 125%;",
              "}",
              ".supportText{",
              "    fill:#BBB;",
              "    font-size: 100%;",
              "}",
              ".negativeResult{",
              "    fill: url(#negativePattern);",
              "    stroke: \"",
              "        & _negative",
              "        & \";",
              "    stroke-width: 1;",
              "    stroke-dasharray: 7 5;",
              "}",
              ".positiveResult{",
              "    fill: \"",
              "        & _positive",
              "        & \";",
              "    stroke: none;",
              "}",
              ".negatedPatternLines{",
              "    fill-opacity: 1;",
              "    stroke: \"",
              "        & _negative",
              "        & \";",
              "}",
              ".bolden{",
              "    font-weight: bold;",
              "}",
              "</style>\"",
              "",
              "/* DEFS + PATTERNS DECLARATIONS */",
              "VAR _defs =",
              "    \"<defs>",
              "    <pattern id='negativePattern' x='0' y='0' width='10' height='10' patternUnits='userSpaceOnUse'>",
              "        <line class='negatedPatternLines' x1='10' x2='0' y1='0' y2='10' />",
              "    </pattern>",
              "</defs>\"",
              "",
              "/* CALCULATION */",
              "VAR _doublePadding = ( _paddning * 2 )",
              "VAR _usableWidth = _width - ( _doublePadding * 2 )",
              "VAR _usableHeight = _height - _doublePadding",
              "VAR _yStartPosition = _height * 0.50",
              "VAR _yEndPosition = _usableHeight * 0.25",
              "VAR _div = DIVIDE( _value, _target )",
              "VAR _divModifiedByWidth = _div * _usableWidth",
              "VAR _barWidth = IF( _target >= _value, _divModifiedByWidth, _usableWidth )",
              "VAR _linePosition = IF( _target >= _value, _width - _doublePadding, DIVIDE( _target, _value ) * _usableWidth )",
              "VAR _bar =",
              "    \"<rect class='progressBar' x='\" & _doublePadding & \"' y='\" & _yStartPosition & \"' width='\" & _barWidth & \"' height='\"",
              "        & _yEndPosition",
              "        & \"'/>\"",
              "        & IF(",
              "            _target > _value,",
              "            \"<rect class='negativeResult' x='\" & _doublePadding + _barWidth & \"' y='\" & _yStartPosition & \"' width='\"",
              "                & _linePosition - ( _doublePadding + _barWidth )",
              "                & \"' height='\"",
              "                & _yEndPosition",
              "                & \"' />\",",
              "            \"<rect class='positiveResult' x='\" & _linePosition & \"' y='\" & _yStartPosition & \"' width='\"",
              "                & _barWidth - _linePosition + _doublePadding",
              "                & \"' height='\"",
              "                & _yEndPosition",
              "                & \"' />\"",
              "        )",
              "VAR _endLine =",
              "    \"<line class='endLine' x1='\" & _linePosition & \"' x2='\" & _linePosition & \"' y1='\" & _yStartPosition * 0.95 & \"' y2='\"",
              "        & ( _yStartPosition + _yEndPosition ) * 1.05",
              "        & \"' />\"",
              "VAR _texts =",
              "    \"<text class='mainText bolden' x='50%' y='\" & _yStartPosition * 0.60 & \"'>\" & FORMAT( _div, \"0.0%\" ) & \" ~ \"",
              "        & IF( ( _value - _target ) < 0, \"Not filled\", \"Filled\" )",
              "        & \"</text>",
              "    <text class='supportText' x='50%' y='\"",
              "        & _yStartPosition * 0.825",
              "        & \"'>\"",
              "        & IF( _value >= _target, \"Over: \", \"Missing: \" )",
              "        & \"<tspan class='bolden'>\"",
              "        & ABS( _value - _target )",
              "        & \"</tspan></text>\"",
              "VAR _result = _svgDeclaration & _svgHeader & _style & _defs & _bar & _texts & _endLine & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "992f445a-d1de-4684-b6d2-a32ad2e5a7e6",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Waffle Filling Card",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _val =",
              "    DIVIDE ( [Sum (CY YTD)], [Sum (PY YTD)] ) * 100 // INSERT YOUR MEASURE HERE <- OUTPUT OF MEASURE SHOUD BE WHOLE NUMBER BETWEEN 0 AND 100",
              "VAR _space = 5 // SPACE BETWEEN CUBES",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 240 // Height size of the SVG",
              "VAR _padding = 15 // Padding between border and SVG",
              "",
              "/* PRECALCULATIONS */",
              "VAR _doublePadding = _padding * 2",
              "VAR _usableHeight = _height - _doublePadding",
              "VAR _usableWidth = _width - _doublePadding",
              "VAR _imageSize =",
              "    MIN ( _usableHeight, _usableWidth ) // HEIGHT SIZE OF IMAGE",
              "",
              "/* COLORS DECLARTIONS */",
              "VAR _nonfilledCubeColor = \"#CCCCCC\" // COLOR OF NON FILLED CUBES",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _filledCubeColor =",
              "    // COLOR OF FILLED CUBES ",
              "    SWITCH (",
              "        TRUE (),",
              "        _val >= 80, _positive,",
              "        _val > 70, _neutral,",
              "        _negative",
              "    ) ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' height = '\" & _height & \"' width = '\" & _width & \"'>\"",
              "VAR _svgEnd = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _size = 10",
              "VAR _roundedValue =",
              "    ROUND ( _val, 1 )",
              "VAR _generateSeries =",
              "    SELECTCOLUMNS ( GENERATESERIES ( 0, ( _size * _size ) - 1, 1 ), \"@vl\", [Value] )",
              "VAR _cubeSize =",
              "    ROUND ( DIVIDE ( _imageSize - ( ( _size + 1 ) * _space ), _size ), 1 )",
              "VAR _cubes =",
              "    CONCATENATEX (",
              "        _generateSeries,",
              "        VAR _mod =",
              "            _size - MOD ( [@vl], _size )",
              "        VAR _rounder =",
              "            _size",
              "                - ROUNDUP ( DIVIDE ( [@vl] + 1, _size ), 0 )",
              "        VAR _cubeXPosition = ( _mod * _cubeSize ) + ( _space * _mod ) - ( _cubeSize + _space )",
              "        VAR _cubeYPosition = ( _rounder * _cubeSize ) + ( _space * _rounder + 1 )",
              "        VAR _cubes =",
              "            SWITCH (",
              "                TRUE (),",
              "                _val >= [@vl] + 1,",
              "                    \"<rect x='\" & _cubeXPosition + _padding & \"' y='\" & _cubeYPosition + _padding & \"' height='\" & _cubeSize & \"' width='\" & _cubeSize & \"' fill='\" & _filledCubeColor & \"' />\",",
              "                _val >= [@vl]",
              "                    && _val <= [@vl] + 1,",
              "                    VAR _positionModificator = _val - [@vl]",
              "                    VAR _x = _cubeXPosition + _padding",
              "                    VAR _y = _cubeYPosition + _padding",
              "                    RETURN",
              "                        \"<rect x='\" & _x & \"' y='\" & _y & \"' height='\" & _cubeSize & \"' width='\" & _cubeSize & \"' fill='\" & _nonfilledCubeColor & \"' />",
              "                    <rect x='\" & _x + ( _cubeSize * ( 1 - _positionModificator ) ) & \"' y='\" & _y & \"' height='\" & _cubeSize & \"' width='\" & _cubeSize * _positionModificator & \"' fill='\" & _filledCubeColor & \"' />\",",
              "                \"<rect x='\" & _cubeXPosition + _padding & \"' y='\" & _cubeYPosition + _padding & \"' height='\" & _cubeSize & \"' width='\" & _cubeSize & \"' fill='\" & _nonfilledCubeColor & \"' />\"",
              "            )",
              "        RETURN",
              "            _cubes",
              "    )",
              "VAR _text =",
              "    VAR _rounder =",
              "        _size - ROUNDUP ( DIVIDE ( _val, _size ), 0 )",
              "    VAR _textYPosition = ( _rounder * _cubeSize ) + ( _space * _rounder + 1 ) + ( ( _cubeSize + _space ) / 2 )",
              "    RETURN",
              "        \"<text x='\" & _imageSize - _space + _padding & \"' y='\" & _textYPosition + _padding & \"' fill='\" & _filledCubeColor & \"' font-family='Segoe UI' alignment-baseline='middle' font-weight='bold' font-size='95%'>🡄 \" & _roundedValue & \"%</text>\"",
              "VAR _result = _svgDeclaration & _svgHeader & _cubes & _text & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "08b0f97c-90f4-4843-b291-570d579d57a7",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Waffle Icon Filling Card",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _val =",
              "    ( DIVIDE ( [Sum (CY YTD)], [Sum (PY YTD)] ) * 0.75 ) * 100 + 0.2 // INSERT YOUR MEASURE HERE <- OUTPUT OF MEASURE SHOUD BE WHOLE NUMBER BETWEEN 0 AND 100",
              "VAR _space = 5 // SPACE BETWEEN CUBES",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 240 // Height size of the SVG",
              "VAR _padding = 15 // Padding between border and SVG",
              "",
              "/* PRECALCULATIONS */",
              "VAR _doublePadding = _padding * 2 // DOUBLE PADDING",
              "VAR _usableHeight = _height - _doublePadding // HEIGHT OF USABLE SPACE",
              "VAR _usableWidth = _width - _doublePadding // WIDTH OF USABLE SPACE",
              "VAR _imageSize =",
              "    MIN ( _usableHeight, _usableWidth ) // HEIGHT SIZE OF IMAGE",
              "",
              "/* COLORS DECLARTIONS */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _filledCubeColor =",
              "    // COLOR OF FILLED CUBES ",
              "    SWITCH (",
              "        TRUE (),",
              "        _val >= 80, _positive,",
              "        _val > 70, _neutral,",
              "        _negative",
              "    ) ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' height = '\" & _height & \"' width = '\" & _width & \"'>\"",
              "VAR _svgEnd = \"</svg>\" ",
              "",
              "/* ICONS DECLARATIONS */",
              "VAR _defs = \"<defs>",
              "        <svg id='skeleton' viewBox='0 0 90 90' xmlns:space='preserve'>",
              "  <defs>",
              "    <filter id='f1' x='-50%' y='-50%' width='200%' height='200%'>",
              "      <feGaussianBlur in='SourceGraphic' stdDeviation='2' result='blur' />",
              "      <feColorMatrix in='blur' type='matrix' values='0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 100 -10' result='goo' />",
              "      <feBlend in='SourceGraphic' in2='goo' />",
              "    </filter>",
              "  </defs>",
              "  <g filter='url(#f1)'><svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 90 90' data-tags='body'>",
              "      <g class='bones' stroke='#000' stroke-width='2.25'>",
              "        <path fill='#ffffff' data-layer='skeleton/bones' d='M43.2 39.6h3.6v36h-3.6z' />",
              "        <path",
              "          d='M45 81l-1.8-1.8-1.8-3.6 1.8-1.8h3.6l1.8 1.8-1.8 3.6zM41.4 63.537c.624 1.899.58 3.692 0 5.4h7.2c-.503-1.77-.574-3.566 0-5.4zM41.4 51.794c.624 1.898.58 3.691 0 5.4h7.2c-.503-1.77-.574-3.567 0-5.4zM41.4 42.104c.624 1.899.58 3.692 0 5.4h7.2c-.503-1.77-.574-3.566 0-5.4z'",
              "          fill='#ffffff' data-layer='skeleton/bones' />",
              "        <path",
              "          d='M45 9C28.8 9 14.4 19.8 11.062 33c-1.38 5.461 2.558 8.44 8.75 10.062v5.532h50.376v-5.532c6.192-1.623 10.13-4.6 8.75-10.062C75.6 19.8 61.2 9 45 9z'",
              "          fill='#ffffff' data-layer='skeleton/bones' />",
              "        <path d='M27 41.4v7.2m7.2-7.2v7.2m7.2-7.2v7.2m7.2-7.2v7.2m7.2-7.2v7.2m7.2-7.2v7.2' fill='none' />",
              "        <path",
              "          d='M22.594 50.217a4.5 4.5 0 0 0-4.5 4.5c0 1.021.363 1.932.937 2.687-.574.755-.937 1.666-.937 2.688a4.5 4.5 0 0 0 8.906.906h36a4.5 4.5 0 0 0 8.906-.906c0-1.022-.363-1.933-.937-2.688.574-.755.937-1.666.937-2.687A4.5 4.5 0 0 0 63 53.81H27a4.5 4.5 0 0 0-4.406-3.593z'",
              "          fill='#ffffff' data-layer='skeleton/bones' />",
              "        <path",
              "          d='M31.594 64.819a4.5 4.5 0 0 0-4.5 4.5c0 1.022.363 1.932.937 2.687-.574.756-.937 1.666-.937 2.688A4.5 4.5 0 0 0 36 75.6h18a4.5 4.5 0 0 0 8.906-.906c0-1.022-.363-1.932-.937-2.688.574-.755.937-1.665.937-2.687A4.5 4.5 0 0 0 54 68.413H36a4.5 4.5 0 0 0-4.406-3.594z'",
              "          fill='#ffffff' data-layer='skeleton/bones' />",
              "      </g>",
              "      <g class='sockets' fill='#000000' stroke='#000' stroke-width='2.25'>",
              "        <path",
              "          d='M34.179 26.377c-.529 2.834-3.254 5.131-6.088 5.131s-4.703-2.297-4.175-5.131c.529-2.834 3.254-5.132 6.088-5.132s4.703 2.298 4.175 5.132zM55.959 26.377c.528 2.834 3.254 5.131 6.088 5.131s4.703-2.297 4.174-5.131c-.528-2.834-3.254-5.132-6.088-5.132s-4.703 2.298-4.174 5.132z'",
              "          data-layer='skeleton/sockets' />",
              "      </g>",
              "    </svg></g>",
              "</svg>",
              "    <svg id='goblin' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 90 90' xml:space='preserve'>",
              "  <defs>",
              "    <filter id='f1' x='-50%' y='-50%' width='200%' height='200%'>",
              "      <feGaussianBlur in='SourceGraphic' stdDeviation='2' result='blur'/>",
              "      <feColorMatrix in='blur' type='matrix' values='0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 100 -10' result='goo'/>",
              "      <feBlend in='SourceGraphic' in2='goo'/>",
              "    </filter>",
              "  </defs><g filter='url(#f1)'><svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 90 90' data-tags='clothing'><defs><linearGradient id='d-rmefh-a'><stop offset='0'/><stop offset='1' stop-opacity='0'/></linearGradient></defs><path d='M48 73.938c-2.432 2.403-5.47 4.653-9.281 6.5A36.03 36.03 0 0 0 45 81c3.868 0 7.602-.59 11.094-1.719-3.182-1.678-5.861-3.506-8.094-5.343z' fill='#b4b4b4' data-layer='leaf-garment/shirt' stroke='#000' stroke-width='2.25' stroke-linecap='round'/><g class='leaf-right' fill='#31542D' stroke='#000'><path d='M79.219 50.094C71.92 52.449 59.745 54 45.906 54c-2.527 0-4.977-.058-7.375-.156l-.718 7.344S46.8 84.6 84.6 86.4c1.8-9-3.6-35.994-3.6-35.994z' data-layer='leaf-garment/leaf-right' stroke-width='2.25'/><path d='M64.8 61.2c3.6 14.4 19.8 25.2 19.8 25.2' data-layer='leaf-garment/leaf-right' stroke-width='2.25' stroke-linecap='round'/><path d='M73.167 75.09c2.667-3.103 6.597-2.854 6.597-2.854M76.279 79.2c-2.479 0-3.5 2.336-3.5 2.336M69.296 70.028c-5.4 1.8-7.2 5.4-7.2 5.4M66.6 66.6c3.6-5.4 10.8-5.4 10.8-5.4' data-layer='leaf-garment/leaf-right' stroke-width='1.125' stroke-linecap='round'/></g><g class='leaf-left' fill='#31542D' stroke='#000'><path d='M9 48.594s-5.4 18.006-3.594 36C55.8 90 57.594 54 57.594 54l-.375-.375c-3.59.234-7.38.375-11.313.375-16.282 0-30.285-2.14-36.718-5.219.114-.283-.163-.162-.188-.187z' data-layer='leaf-garment/leaf-left' stroke-width='2.25'/><path d='M28.8 59.4C23.4 70.2 7.2 82.8 7.2 82.8' data-layer='leaf-garment/leaf-left' stroke-width='2.25' stroke-linecap='round'/><path d='M15.915 75.04C12.982 72 9 73.8 9 73.8M18.636 71.773c8.364.227 11.326 4.28 11.326 4.28M23.025 67.976c-3.936-5.26-11.136-3.46-11.136-3.46M25.914 63.096C36 63 40.847 68.854 40.847 68.854' data-layer='leaf-garment/leaf-left' stroke-width='1.125' stroke-linecap='round'/></g></svg><svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 90 90' data-tags='body+fantasy'><path d='M9.113 9c-1.8 3.6-3.02 9.495-3.625 14.406-.734 5.955-2.832 12.71 0 18 .55 1.027 2.054 1.953 3.343 2.625-.009.325-.03.642-.03.969 0 19.882 16.117 36 36 36 19.881 0 36-16.118 36-36 0-.274.005-.54 0-.812 1.344-.674 2.998-1.67 3.593-2.782 2.831-5.29.733-12.045 0-18C83.789 18.496 82.6 12.6 80.8 9c-1.8 3.6-2.789 9.202-3.594 10.812-1.012 2.025-1.462 4.587-1.656 6.47C69.23 15.921 57.823 9 44.8 9c-12.862 0-24.133 6.76-30.5 16.906-.213-1.84-.649-4.203-1.594-6.094C11.901 18.202 10.913 12.6 9.113 9z' fill='#809F5A' data-layer='elf/body' stroke='#000' stroke-width='2.25' stroke-linecap='round'/></svg><svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 90 90' data-tags='hair'><defs><linearGradient id='d-f4ULu-a'><stop offset='0'/><stop offset='1' stop-opacity='0'/></linearGradient></defs><path d='M43.2 9s-18-5.4-28.8 10.8c-1.8 3.6-2.076 8.329-9 10.8 0 0 0 1.8 3.6 3.6 0 0 0 1.8-3.6 5.4 3.6 3.6 10.8-7.2 10.8-7.2L18 36s10.8-5.4 14.4-10.8c1.8 1.8 3.6 3.6 3.6 7.2C50.4 27 50.4 19.8 50.4 19.8l9 7.2s3.6-1.8 3.6-5.4c3.6 1.8 7.2 9 7.2 9l1.8-5.4c3.6 7.2 10.8 5.4 10.8 5.4-1.8-1.8-7.2-10.8-7.2-10.8C61.2 1.8 43.2 9 43.2 9z' fill='#0D5704' data-layer='relaxed-hair/hair' stroke='#000' stroke-width='2.25'/></svg><svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 90 90' data-tags='clothing+modern'><path d='M9.18 48.781c1.887 18.108 17.205 32.22 35.813 32.22 18.334 0 33.474-13.713 35.718-31.438C73.66 52.208 60.741 54 45.9 54c-16.282 0-30.286-2.14-36.719-5.219z' fill='#6D6A65' data-layer='bulletproof-vest/shirt' stroke='#000' stroke-width='2.25' stroke-linecap='round'/><g class='tie' fill='#b4b4b4' stroke='#000' stroke-width='2.25'><path d='M45.36 57.24h-2.427l-1.618 13.907 4.045 6.954 4.045-6.954-1.618-13.907z' data-layer='bulletproof-vest/tie'/><path d='M41.399 53.906c-.064 1.25-.045 2.588.295 3.344.76 1.692 3.677 2.5 3.677 2.5s2.894-.808 3.654-2.5c.34-.756.36-2.094.295-3.344-1.17.044-2.354.094-3.563.094-1.479 0-2.94-.029-4.358-.094z' data-layer='bulletproof-vest/tie'/></g><path style='marker:none' d='M28.969 53.156c-.01 7.912-4.012 14.604-9.594 17.125C25.905 76.896 34.971 81 45 81c10.059 0 19.154-4.129 25.688-10.781-5.468-2.561-9.376-9.141-9.438-16.906-2.65.244-5.443.417-8.344.53-.088 4.672-3.412 8.438-7.531 8.438-4.129 0-7.488-3.782-7.563-8.468-3.08-.14-6.062-.371-8.843-.657z' fill='#B1564D' data-layer='bulletproof-vest/vest' color='#000' stroke='#000' stroke-width='2.25' stroke-linejoin='round' overflow='visible'/><g class='vest-pads' fill='#b4b4b4' color='#000' stroke='#000' stroke-width='2.25' stroke-linejoin='round'><path style='marker:none' d='M61.844 58.313l-4.282 2.468c-2.1 1.213-2.857 3.849-1.687 5.875 1.17 2.027 3.836 2.682 5.938 1.469L65.5 66c-1.684-2.117-2.962-4.737-3.656-7.688zM28.188 59.063c-.796 2.907-2.174 5.47-3.938 7.5l2.688 1.562c2.1 1.213 4.767.558 5.937-1.469 1.17-2.026.414-4.662-1.688-5.875l-3-1.718z' data-layer='bulletproof-vest/vest-pads' overflow='visible'/></g></svg></g></svg>",
              "    </defs>\" ",
              "",
              "/* CALCULATION */",
              "VAR _size = 10",
              "VAR _roundedValue =",
              "    ROUND ( _val, 1 )",
              "VAR _generateSeries =",
              "    SELECTCOLUMNS ( GENERATESERIES ( 0, ( _size * _size ) - 1, 1 ), \"@vl\", [Value] )",
              "VAR _cubeSize =",
              "    ROUND ( DIVIDE ( _imageSize - ( ( _size + 1 ) * _space ), _size ), 1 )",
              "VAR _cubes =",
              "    CONCATENATEX (",
              "        _generateSeries,",
              "        VAR _mod =",
              "            _size - MOD ( [@vl], _size )",
              "        VAR _rounder =",
              "            _size",
              "                - ROUNDUP ( DIVIDE ( [@vl] + 1, _size ), 0 )",
              "        VAR _cubeXPosition = ( _mod * _cubeSize ) + ( _space * _mod ) - ( _cubeSize + _space )",
              "        VAR _cubeYPosition = ( _rounder * _cubeSize ) + ( _space * _rounder + 1 )",
              "        VAR _cubes =",
              "            SWITCH (",
              "                TRUE (),",
              "                _val >= [@vl] + 1,",
              "                    \"<use href='#goblin' x='\" & _cubeXPosition + _padding & \"' y='\" & _cubeYPosition + _padding & \"' height='\" & _cubeSize & \"' width='\" & _cubeSize & \"' />\",",
              "                _val >= [@vl]",
              "                    && _val <= [@vl] + 1,",
              "                    VAR _positionModificator = _val - [@vl]",
              "                    VAR _update = 1 - _positionModificator",
              "                    VAR _x = _cubeXPosition + _padding",
              "                    VAR _y = _cubeYPosition + _padding",
              "                    RETURN",
              "                        \"<use href='#skeleton' x='\" & _x & \"' y='\" & _y & \"' height='\" & _cubeSize * _update & \"' width='\" & _cubeSize * _update & \"' />",
              "                    <use href='#goblin' x='\" & _x + ( _cubeSize * _update ) & \"' y='\" & _y + ( _cubeSize * _update ) & \"' height='\" & _cubeSize * _positionModificator & \"' width='\" & _cubeSize * _positionModificator & \"' />\",",
              "                \"<use href='#skeleton' x='\" & _cubeXPosition + _padding & \"' y='\" & _cubeYPosition + _padding & \"' height='\" & _cubeSize & \"' width='\" & _cubeSize & \"' />\"",
              "            )",
              "        RETURN",
              "            _cubes",
              "    )",
              "VAR _text =",
              "    VAR _rounder =",
              "        _size - ROUNDUP ( DIVIDE ( _val, _size ), 0 )",
              "    VAR _textYPosition = ( _rounder * _cubeSize ) + ( _space * _rounder + 1 ) + ( ( _cubeSize + _space ) / 2 )",
              "    RETURN",
              "        \"<text x='\" & _imageSize - _space + _padding & \"' y='\" & _textYPosition + _padding & \"' fill='\" & _filledCubeColor & \"' font-family='Segoe UI' alignment-baseline='middle' font-weight='bold' font-size='95%'>🡄 \" & _roundedValue & \"%</text>\"",
              "VAR _result = _svgDeclaration & _svgHeader & _defs & _cubes & _text & _svgEnd",
              "RETURN",
              "    _result",
              ""
            ],
            "lineageTag": "020e68df-c941-4f02-acbc-579be8a2588e",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "KPI Trend Line",
            "expression": [
              "",
              "/* SETUP */",
              "// INSERT YOUR SETUP VARIABLES HERE",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 230 // Height size of the SVG",
              "VAR _padding = 15 // Padding between SVG image and border",
              "VAR _preparedTbl = // Insert your table, quantitative column and measure",
              "    ADDCOLUMNS(",
              "        SELECTCOLUMNS( SUMMARIZE( 'Table', 'Table'[Quantitative] ), \"@xAxis\", 'Table'[Quantitative] ),",
              "        \"@vl\", [Sum]",
              "    )",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _darkGrey = \"#808080\" // Will be used for all text",
              "VAR _targetLineColor = \"#A8A8A8\" // Will be used for target line",
              "",
              "/* PRECALCULATIONS */",
              "VAR _maxValue = MAXX( _preparedTbl, [@vl] )",
              "VAR _target = AVERAGEX( _preparedTbl, [@vl] )",
              "VAR _counter = COUNTROWS( _preparedTbl )",
              "VAR _half = _counter / 2",
              "VAR _targetFulfillment = COUNTROWS( FILTER( _preparedTbl, [@vl] >= _target ) )",
              "",
              "/* STYLE DECLARATIONS */",
              "VAR _style =",
              "    \"<style> ",
              "text{",
              "    font-size:95%;",
              "    font-family: Segoe UI;",
              "    dominant-baseline: hanging;",
              "    fill:\" & _darkGrey",
              "        & \";",
              "}",
              ".bolder{ font-weight: bold; }",
              ".italic{ font-style: italic; }",
              ".lineChart{",
              "    stroke:\"",
              "        & _targetLineColor",
              "        & \";",
              "    stroke-width:2.5;",
              "    fill: none;",
              "}",
              ".positiveBar{",
              "    fill:\"",
              "        & _positive",
              "        & \";",
              "    opacity: 0.15;",
              "}",
              ".stateColor{ fill:\"",
              "        & IF( _targetFulfillment >= _half, _positive, _negative )",
              "        & \"; }",
              ".negativeResult{ fill:\"",
              "        & _negative",
              "        & \"; }",
              ".positiveResult{ fill:\"",
              "        & _positive",
              "        & \"; }",
              "</style>\"",
              "",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' width='\" & _width & \"' height='\" & _height & \"'>\"",
              "VAR _svgEnd = \"</svg>\"",
              "",
              "/* CALCULATION */",
              "VAR _doubePadding = _padding * 2",
              "VAR _updatedHeight = ( _height - _doubePadding )",
              "VAR _usableWidth = _width - _doubePadding",
              "VAR _scale = 0.45",
              "VAR _usableHeight = _updatedHeight * _scale",
              "VAR _revertedHeight = _updatedHeight * ( 1 - _scale )",
              "VAR _targetHeight = ( _usableHeight - ( ( _target / _maxValue ) * _usableHeight ) )",
              "VAR _targetHeightModificator = _usableHeight * 0.15",
              "VAR _rowsCounter = COUNTROWS( _preparedTbl )",
              "VAR _spaceBetweenPoitns = _usableWidth / _rowsCounter",
              "VAR _targetSum = ROUND( _target, 1 ) * _counter",
              "VAR _resultText = IF( _targetSum > _maxValue, \"negativeResult\", \"positiveResult\" )",
              "VAR _lineChart =",
              "    \"<path class='lineChart' d='\"",
              "        & CONCATENATEX(",
              "            _preparedTbl,",
              "            VAR _rowNumber = ROWNUMBER( _preparedTbl, ORDERBY( [@xAxis], ASC BLANKS DEFAULT ) )",
              "            VAR _xPostion = ( _rowNumber * _spaceBetweenPoitns )",
              "            VAR _yPosition = ( _usableHeight - ( ( [@vl] / _maxValue ) * _usableHeight ) ) + _revertedHeight",
              "            RETURN",
              "                IF( _rowNumber = 1, \"M \", \" L \" ) & _xPostion & \" \" & _yPosition",
              "        )",
              "        & \"' />\"",
              "VAR _positiveBar =",
              "    \"<rect class='positiveBar' x='\" & _padding & \"' y='\" & _revertedHeight - _targetHeightModificator & \"' width='\"",
              "        & _usableWidth",
              "        & \"' height='\"",
              "        & _targetHeight + _targetHeightModificator",
              "        & \"'  />\"",
              "VAR _textations =",
              "    \"",
              "    <text x='\" & _padding & \"' y='\" & _padding & \"'><tspan class='stateColor bolder'>\"",
              "        & COUNTROWS( FILTER( _preparedTbl, [@vl] >= _target ) )",
              "        & \"x</tspan> was target hit <tspan class='italic'>~ \"",
              "        & FORMAT( DIVIDE( _targetFulfillment, _counter ), \"0.0%\" )",
              "        & \"</tspan></text>",
              "    <text x='\"",
              "        & _padding",
              "        & \"' y='\"",
              "        & _padding * 2.5",
              "        & \"'>Monthly target was \"",
              "        & ROUND( _target, 1 )",
              "        & \", <tspan class='bolder \"",
              "        & _resultText",
              "        & \"'>\"",
              "        & _targetSum",
              "        & \"</tspan> in total.</text>",
              "    <text x='\"",
              "        & _padding",
              "        & \"' y='\"",
              "        & _padding * 4",
              "        & \"'>Total sales were <tspan class='bolder \"",
              "        & _resultText",
              "        & \"'>\"",
              "        & _maxValue",
              "        & \"</tspan> ~ \"",
              "        & IF(",
              "            _targetSum > _maxValue,",
              "            \"<tspan class='negativeResult bolder'>CLAIM NOT APPROVED</tspan>\",",
              "            \"<tspan class='positiveResult bolder'>CLAIM APPROVED</tspan>\"",
              "        )",
              "        & \"</text>\"",
              "VAR _result = _svgDeclaration & _svgHeader & _style & _positiveBar & _lineChart & _textations & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "88ff7e58-2341-4ff0-9173-85efae06b962",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "KPI Target Checker",
            "expression": [
              "",
              "/* SETUP */",
              "// INSERT YOUR SETUP VARIABLES HERE",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 230 // Height size of the SVG",
              "VAR _padding = 15 // Padding between the SVG image and the border",
              "VAR _boxSize = 25 // Size of the boxes",
              "VAR _preparedTbl =",
              "    SELECTCOLUMNS ( // INSERT YOUR MEASURES FROM KPI AND ITS TARGET + FORMAT OF RESULT",
              "        {",
              "            ( 1, [Sum (CY YTD)], [Sum (PY YTD)], \"#\" ),",
              "            ( 2, DIVIDE ( [Sum (CY YTD)], [Sum (PY YTD)] ), 0.70, \"0.0%\" ),",
              "            ( 3, CALCULATE ( [Sum], 'Table'[Dimension] = \"Elves\" ), CALCULATE ( [Sum], 'Table'[Dimension] = \"Orcs\" ), \"#\" ),",
              "            ( 4, DIVIDE ( CALCULATE ( [Sum], 'Table'[Dimension] = \"Goblins\" ), [Sum] ), 0.30, \"0.0%\" ),",
              "            ( 5, DIVIDE ( CALCULATE ( [Sum], 'Table'[SubDimension] = \"Monks\" ), [Sum] ), 0.54, \"0.0%\" )",
              "        },",
              "        \"@id\", [Value1],",
              "        \"@actValue\", [Value2],",
              "        \"@targetValue\", [Value3],",
              "        \"@format\", [Value4]",
              "    ) ",
              "    ",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _darkGrey = \"#808080\" // Will be used for box border and texts",
              "",
              "/* STYLE DECLARATIONS */",
              "VAR _style = \"<style>",
              "text{",
              "    font-family: Segoe UI;",
              "    dominant-baseline: middle;",
              "    fill: \" & _darkGrey & \";",
              "}",
              ".positiveText{",
              "    fill: \" & _positive & \";",
              "}",
              ".negativeText{",
              "    fill: \" & _negative & \";",
              "}",
              ".bolder{",
              "    font-weight: bold;",
              "}",
              ".box{",
              "    fill:none;",
              "    stroke: \" & _darkGrey & \";",
              "    stroke-width: 2;",
              "}",
              ".check{",
              "    fill:none;",
              "    stroke:\" & _positive & \";",
              "    stroke-width: 3;",
              "    stroke-linecap: round;",
              "    stroke-linejoin: round;",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "// BASIC SVG DECLARATION",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' width='\" & _width & \"' height='\" & _height & \"'>\"",
              "VAR _svgEnd = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _doubePadding = _padding * 2",
              "VAR _usableHeight = ( _height - _doubePadding )",
              "VAR _rowsCounter =",
              "    COUNTROWS ( _preparedTbl )",
              "VAR _spaceBetweenPoitns = _usableHeight / _rowsCounter",
              "VAR _boxSegment = ( _boxSize / 6 )",
              "VAR _checkBoxes =",
              "    CONCATENATEX (",
              "        _preparedTbl,",
              "        VAR _rowNumber = [@id] - 1",
              "        VAR _yPosition = _rowNumber * _spaceBetweenPoitns + _padding",
              "        RETURN",
              "            \"<rect class='box' rx='1%' x='\" & _padding & \"' y='\" & _yPosition & \"' width='\" & _boxSize & \"' height='\" & _boxSize & \"' />\"",
              "                & IF (",
              "                    [@actValue] >= [@targetValue],",
              "                    \"<path class='check' d='M \" & _padding + _boxSegment & \" \" & _yPosition + ( _boxSize / 2 ) & \" L \" & _padding + ( _boxSegment * 2 ) & \" \" & _yPosition + ( _boxSize * ( 3 / 4 ) ) & \" L \" & _padding + ( _boxSegment * 5 ) & \" \" & _yPosition + ( _boxSize * ( 1 / 4 ) ) & \"' />\",",
              "                    \"\"",
              "                ) & \"<text x='\" & ( _padding * 2 ) + _boxSize & \"' y='\" & _yPosition + ( _boxSize / 2 ) & \"'>Reached <tspan class='\"",
              "                & IF ( [@actValue] >= [@targetValue], \"positiveText\", \"negativeText\" ) & \" bolder'>\"",
              "                & FORMAT ( [@actValue], [@format] ) & \"</tspan> from targeted <tspan class='bolder'>\"",
              "                & FORMAT ( [@targetValue], [@format] ) & \"</tspan></text>\",",
              "        \"\",",
              "        [@id], DESC",
              "    )",
              "VAR _result = _svgDeclaration & _svgHeader & _style & _checkBoxes & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "26e82a6c-10cd-47ad-9b61-5808fdd7b425",
            "dataCategory": "ImageUrl",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Range Progress Card",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _insertedMeasure = ROUND( DIVIDE( [Sum (CY YTD)], [Sum (PY YTD)] ), 2 ) // Measure that you want to use for generating this visual (its value should be one of categories)",
              "VAR _categories = 10 // Number of categories/marker lines that you want to have",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 230 // Height size of the SVG",
              "VAR _padding = 15 // Padding between SVG Image and the borders",
              "",
              "/* COLORS DECLARTIONS */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _darkGrey = \"#242425\" // Darkgrey Color",
              "VAR _lightGrey = \"#CCCCCC\"",
              "VAR _colorDefined = SWITCH(",
              "        TRUE( ),",
              "        _insertedMeasure > 0.66, _positive,",
              "        _insertedMeasure > 0.33, _neutral,",
              "        _negative",
              "    )",
              "",
              "/* STYLE DECLARTIONS */",
              "VAR _style =",
              "    \"<style>",
              "text{",
              "    font-family: Segoe UI;",
              "    text-anchor: middle;",
              "}",
              "rect{",
              "    stroke: none;",
              "}",
              ".negativeBar{",
              "    fill: \"",
              "        & _negative",
              "        & \";",
              "}",
              ".neutralBar{",
              "    fill: \"",
              "        & _lightGrey",
              "        & \";",
              "}",
              ".positiveBar{",
              "    fill: \"",
              "        & _positive",
              "        & \";",
              "}",
              ".supportLines{",
              "    stroke: \"",
              "        & _lightGrey",
              "        & \";",
              "    stroke-width: 2;",
              "}",
              ".supportText{",
              "    fill: #CCC;",
              "}",
              ".hangText{",
              "    dominant-baseline: hanging;",
              "}",
              ".mainText{",
              "    fill: \"",
              "        & _colorDefined",
              "        & \";",
              "}",
              ".claimText{",
              "    font-size: 150%;",
              "    font-weight: bold;",
              "    fill: \"",
              "        & _colorDefined",
              "        & \";",
              "}",
              ".mainTextGrey{",
              "    font-size: 150%;",
              "    fill: \"",
              "        & _lightGrey",
              "        & \";",
              "}",
              ".triangleColor{",
              "    font-size: 150%;",
              "    dominant-baseline: middle;",
              "    fill: \"",
              "        & _lightGrey",
              "        & \";",
              "    stroke: \"",
              "        & _darkGrey",
              "        & \";",
              "}",
              "</style>\"",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _svgDeclaration = \"data:image/svg+xml;utf8,\"",
              "VAR _svgHeader = \"<svg xmlns='http://www.w3.org/2000/svg' width='\" & _width & \"' height='\" & _height & \"'>\"",
              "VAR _svgEnd = \"</svg>\"",
              "",
              "/* CALCULATION */",
              "VAR _doublePadding = _padding * 2",
              "VAR _usableWidth = _width - _doublePadding",
              "VAR _tripledUsableWidth = _usableWidth / 3",
              "VAR _usableHeight = _height - _doublePadding",
              "VAR _bars =",
              "    \"<rect class='negativeBar' x='\" & _padding & \"' y='55%' width='\" & _tripledUsableWidth",
              "        & \"' height='15%' />",
              "<rect class='neutralBar' x='\"",
              "        & _tripledUsableWidth + _padding",
              "        & \"' y='55%' width='\"",
              "        & _tripledUsableWidth",
              "        & \"' height='15%' />",
              "<rect class='positiveBar' x='\"",
              "        & ( _tripledUsableWidth * 2 ) + _padding",
              "        & \"' y='55%' width='\"",
              "        & _tripledUsableWidth",
              "        & \"' height='15%' />\"",
              "VAR _movableTriangle =",
              "    \"<text class='triangleColor' x='\" & _padding + ( _usableWidth * IF( _insertedMeasure > 1, 1, _insertedMeasure ) )",
              "        & \"' y='56.125%'>▼</text>\"",
              "VAR _supportTexts =",
              "    \"<g class='hangText'><text class='supportText' x='\" & _padding + ( _tripledUsableWidth / 2 )",
              "        & \"' y='75%'>to 33%</text>",
              "    <text class='supportText' x='\"",
              "        & _padding + ( _tripledUsableWidth * 1.5 )",
              "        & \"' y='75%'>to 66%</text>",
              "    <text class='supportText' x='\"",
              "        & _padding + ( _tripledUsableWidth * 2.5 )",
              "        & \"' y='75%'>to 100%</text></g>\"",
              "VAR _resultText =",
              "    \"<text class='mainTextGrey' x='50%' y='40%'> we reached <tspan class='mainText'>\" & FORMAT( _insertedMeasure, \"0.0%\" )",
              "        & \"</tspan></text>",
              "    <text class='claimText' x='50%' y='25%'>\"",
              "        & SWITCH(",
              "            TRUE( ),",
              "            _insertedMeasure > 0.66, \"CLAIM ACCEPTED\",",
              "            _insertedMeasure > 0.33, \"NO ABILITY TO DECIDE\",",
              "            \"CLAIM NOT ACCEPTED\"",
              "        )",
              "        & \"</text>\"",
              "VAR _result = _svgDeclaration & _svgHeader & _style & _bars & _movableTriangle & _supportTexts & _resultText & _svgEnd",
              "RETURN",
              "    _result"
            ],
            "lineageTag": "a1e2d97d-546c-4e98-98ba-6bf9cf51a035",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Text Comparer Extended",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _yearDefinition =",
              "    MAX ( 'Table'[Year] ) // Get the year from the context",
              "VAR _actualQuantity = [Sum (CY YTD)] // Get the actual quantity from the context (Usually it would be measure for the actual year)",
              "VAR _previousQuantity = [Sum (PY YTD)] // Get the previous quantity from the context (Usually it would be measure for the previous year)",
              "VAR _target = _previousQuantity",
              "VAR _previousTarget = _previousQuantity * 0.92 // CANVAS SIZE",
              "VAR _width = 365 // Width size of the SVG",
              "VAR _height = 220 // Height size of the SVG",
              "// PADDING SETUP",
              "VAR _paddning = 15 // Padding between the circle and the canvas",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _grey = \"#BBB\"",
              "VAR _lightGrey = \"#CCC\"",
              "",
              "/* STYLE DECLARTIONS */",
              "VAR _style =",
              "    // This is the style of the card, here you can define the style",
              "    \"<style>",
              "    text{",
              "        font-family: Segoe UI;",
              "        fill: \" & _lightGrey & \";",
              "    }",
              ".mainText{",
              "    dominant-baseline: auto;",
              "    text-anchor: middle;",
              "    font-size:200%;",
              "}",
              ".mainTextColor{    fill:\"",
              "        & IF ( _actualQuantity > _previousQuantity, _positive, _negative ) & \";}",
              ".bold{",
              "    font-weight:bold;",
              "}",
              ".subTexts{",
              "    dominant-baseline: hanging;",
              "    font-size:85%;",
              "    fill:\" & _grey & \";",
              "}",
              ".startText{",
              "    text-anchor: start;",
              "}",
              ".endText{",
              "    text-anchor: end;",
              "}",
              ".splitLine{",
              "    stroke:\" & _lightGrey & \";",
              "    stroke-width: 1;",
              "}",
              ".percentageBase{",
              " font-size: 50%;",
              "}",
              ".italic{",
              "    font-size: 75%;",
              "    font-style: italic;",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _header = \"data:image/svg+xml;utf8,\"",
              "VAR _svgDeclaration = \"<svg xmlns='http://www.w3.org/2000/svg' height='\" & _height & \"' width='\" & _width & \"'>\"",
              "VAR _svgEnding = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _diff = _actualQuantity - _target",
              "VAR _doublePadding = _paddning * 2",
              "VAR _usableWidth = _width - _doublePadding",
              "VAR _div =",
              "    DIVIDE ( _actualQuantity, _previousQuantity ) - 1",
              "VAR _colorForPercentage =",
              "    SWITCH ( TRUE (), _div > 0, _positive, _div < 0, _negative, _neutral )",
              "VAR _content =",
              "    \"",
              "    <text class='mainText' y='42.5%' x='50%'>",
              "        <tspan class='mainTextColor bold'>",
              "        \"",
              "        & FORMAT ( _diff, \"+#,,,,,,,0;-#,,,,,,,0\" ) & \"",
              "    </tspan><tspan class='percentageBase'> ~ \"",
              "        & FORMAT ( ABS ( 1 - DIVIDE ( _actualQuantity, _target ) ), \"0.0%\" ) & \"</tspan></text>",
              "    <g class='subTexts'>",
              "        <text class='startText' y='57.5%' x='\" & _paddning * 1.15 & \"'>",
              "            Actual Year: <tspan class='bold'>\" & _actualQuantity & \"</tspan>",
              "        </text>",
              "        <text class='endText' y='57.5%' x='\" & _usableWidth + ( _paddning * 0.85 ) & \"'>",
              "            Previous Year: <tspan class='bold'>\" & _previousQuantity & \"</tspan>",
              "        </text>",
              "        <text class='startText italic' y='67.5%' x='\" & _paddning * 1.15 & \"'>",
              "            LY change: \"",
              "        & FORMAT ( DIVIDE ( _actualQuantity, _previousQuantity ) - 1, \"0.0%\" ) & \"",
              "        </text>",
              "        <text class='startText' y='77.5%' x='\" & _paddning * 1.15 & \"'>",
              "            Current target: <tspan class='bold'>\" & _target & \"</tspan>",
              "        </text>",
              "        <text class='endText' y='77.5%' x='\" & _usableWidth + ( _paddning * 0.85 ) & \"'>",
              "            Previous target: <tspan class='bold'>\" & _previousTarget & \"</tspan>",
              "        </text>",
              "        <text class='startText italic' y='87.5%' x='\" & _paddning * 1.15 & \"'>",
              "            LY change: \"",
              "        & FORMAT ( DIVIDE ( _target, _previousTarget ) - 1, \"0.0%\" ) & \"",
              "        </text>",
              "    </g>\"",
              "VAR _subLine = \"<line class='splitLine' x1='\" & _paddning & \"' x2='\" & _usableWidth + _paddning & \"' y1='50%' y2='50%' />\"",
              "RETURN",
              "    _header & _svgDeclaration & _style & _subLine & _content & _svgEnding"
            ],
            "lineageTag": "dae936c7-471f-4121-9a01-ff4272297e5b",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Matrix Text KPI",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _yearDefinition =",
              "    MAX ( 'Table'[Year] ) // Get the year from the context",
              "VAR _actualQuantity = [Sum (CY YTD)] // Get the actual quantity from the context (Usually it would be measure for the actual year)",
              "VAR _previousQuantity = [Sum (PY YTD)] // Get the previous quantity from the context (Usually it would be measure for the previous year)",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _neutral = \"#E7E74E\" // Neutral Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _darkerGrey = \"#808080\" // Dark Grey Color",
              "VAR _lightGrey = \"#CCC\" // Light Grey Color",
              "VAR _colorSelection =",
              "    IF ( _actualQuantity >= _previousQuantity, _positive, _negative )",
              "    ",
              "/* STYLE DECLARTIONS */",
              "VAR _style = // This is the style of the card, here you can define the style",
              "\"<style>",
              "    text{",
              "        fill: \" & _lightGrey & \";",
              "        font-family: Segoe UI;",
              "        dominant-baseline: middle;",
              "    }",
              ".mainText{",
              "    font-size:85%;",
              "}",
              ".mainTextColor{",
              "    fill:\" & _colorSelection & \";",
              "}",
              ".grey{",
              "    fill:\" & _darkerGrey & \";",
              "}",
              ".bold{",
              "    font-weight:bold;",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _header = \"data:image/svg+xml;utf8,\"",
              "VAR _svgDeclaration = \"<svg xmlns='http://www.w3.org/2000/svg'>\"",
              "VAR _sortingSupport = \"/*\" & 10000000 + _actualQuantity & \"*/\"",
              "VAR _svgEnding = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _div =",
              "    DIVIDE ( _actualQuantity, _previousQuantity ) - 1",
              "VAR _colorForPercentage =",
              "    SWITCH ( TRUE (), _div > 0, _positive, _div < 0, _negative, _neutral )",
              "VAR _content =",
              "    \"<g class='mainText'>",
              "        <text y='50%'><tspan class='mainTextColor bold'>",
              "            \"",
              "        & IF ( _actualQuantity >= _previousQuantity, \"✔\", \"✘\" ) & \" \" & _actualQuantity & \"</tspan> ~ \"",
              "        & FORMAT ( _actualQuantity - _previousQuantity, \"over # to; missing # from\" ) & \" \" & _previousQuantity & \"",
              "        </text>",
              "    </g>\"",
              "RETURN",
              "    _header & _svgDeclaration & _sortingSupport & _style & _content & _svgEnding"
            ],
            "lineageTag": "274a3bf5-f83d-4b6f-b904-774fc23a0e45",
            "dataCategory": "ImageUrl",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          },
          {
            "name": "Matrix Bullet KPI",
            "expression": [
              "",
              "/* SETUP */",
              "VAR _currentValue = [Sum (CY YTD)] // Current Value",
              "VAR _target = [Sum (PY YTD)] // Target Value",
              "",
              "/* COLOR DEFINITION */",
              "VAR _positive = \"#658E95\" // Positive Color",
              "VAR _negative = \"#7D1D3A\" // Negative Color",
              "VAR _targetLineColor = \"#252526\" // Color for Target Line",
              "VAR _lightGreyBar = \"#EDEBE9\" // Color for support bar in behinde",
              "VAR _lightTextColor = \"#CCC\" // Color for support text",
              "VAR _colorSelection =",
              "    IF ( _currentValue >= _target, _positive, _negative ) ",
              "    ",
              "/* STYLE DECLARTIONS */",
              "VAR _style = // This is the style of the card, here you can define the style",
              "\"<style>",
              "text{",
              "    fill: \" & _lightTextColor & \";",
              "    font-family: Segoe UI;",
              "}",
              "line{",
              "    stroke: \" & _targetLineColor & \";",
              "    stroke-width: 1.25;",
              "}",
              ".mainText{",
              "    font-size:95%;",
              "    dominant-baseline: middle;",
              "    text-anchor: left;",
              "}",
              ".mainColor{",
              "    fill:\" & _colorSelection & \";",
              "}",
              ".lightGrey{",
              "    fill:\" & _lightGreyBar & \";",
              "}",
              ".bold{",
              "    font-weight:bold;",
              "}",
              ".smallerText{",
              "    font-size: 75%;",
              "}",
              "</style>\" ",
              "",
              "/* SVG DECLARTIONS */",
              "VAR _header = \"data:image/svg+xml;utf8,\"",
              "VAR _svgDeclaration = \"<svg xmlns='http://www.w3.org/2000/svg'>\"",
              "VAR _sortingSupport = \"/*\" & 10000000 + _currentValue & \"*/\"",
              "VAR _svgEnding = \"</svg>\" ",
              "",
              "/* CALCULATION */",
              "VAR _boxPadding = 25",
              "VAR _barUsableWidth = 100 - _boxPadding - 10",
              "VAR _diff = _currentValue - _target",
              "VAR _div =",
              "    DIVIDE ( _currentValue, _target )",
              "VAR _colorForBar =",
              "    IF ( _diff >= 0, _positive, _negative )",
              "VAR _sizeOfProgressionBar =",
              "    IF ( _div > 1, 1, _div )",
              "VAR _targetLinePosition =",
              "    IF (",
              "        _diff > 0,",
              "        _barUsableWidth * ( 1 - ( _div - 1 ) ) + _boxPadding,",
              "        _barUsableWidth + _boxPadding",
              "    )",
              "VAR _content =",
              "    \"",
              "    <rect class='lightGrey' x='\" & _boxPadding & \"%' y='10%' height='80%' width='\" & _barUsableWidth + 5 & \"%'/>",
              "    <rect class='mainColor' x='\" & _boxPadding & \"%' y='30%' height='40%' width='\" & _barUsableWidth * _sizeOfProgressionBar & \"%'/>",
              "    <text class='mainText' x='2.5%' y='50%'><tspan class='mainColor bold'>\" & _currentValue & \"</tspan> <tspan class='smallerText'> (\"",
              "        & FORMAT ( _diff, \"+#,,,,,0;-#,,,,,0\" ) & \")</tspan></text>",
              "    <line x1='\" & _targetLinePosition & \"%' y1='0%' x2='\" & _targetLinePosition & \"%' y2='100%' />",
              "    \"",
              "RETURN",
              "    _header & _svgDeclaration & _sortingSupport & _style & _content & _svgEnding",
              ""
            ],
            "lineageTag": "e3391967-c6a0-420b-8904-f6f870b3ca45",
            "dataCategory": "ImageUrl",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "4f5be44a59594685aa453dcbf609e978"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "afb3546c-43d8-48ac-aad4-ca45f6d7bf38",
        "fromTable": "Table",
        "fromColumn": "Month",
        "toTable": "Date",
        "toColumn": "Date"
      }
    ],
    "extendedProperties": [
      {
        "type": "json",
        "name": "TabularEditor_DeploymentMetadata",
        "value": {
          "ClientMachine": "DESKTOP-NV69I5J",
          "DeploymentMode": "SaveUI",
          "TabularEditorBuild": "3.9.0.2972",
          "Time": "2023-09-01T09:56:29.4920984+02:00",
          "User": "DESKTOP-NV69I5J\\Klonk-Temp"
        }
      }
    ],
    "annotations": [
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.120.963.0 (23.08)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"Table\"]"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      }
    ]
  }
}